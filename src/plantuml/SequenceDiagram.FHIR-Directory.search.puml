@startuml SequenceDiagram.FHIR-Directory.tim-search
skinparam dpi 100
skinparam WrapWidth 200
skinparam monochrome true

'title "FHIR-Directory, Sequenzdiagram tim-search'
actor Nutzer
participant cl as "TI-Messenger-Client"
participant fp as "FHIR-Proxy"
participant au as "Auth-Service"
participant fd as "FHIR-Directory"
participant hs as "Matrix-Homeserver\n(Messenger-Proxy)"
activate cl
Nutzer -> cl:gibt FHIR-\nSuchparameter ein
cl -> cl: prüfe ob noch gültiges tim-search-accesstoken\nvom FHIR-Proxy vorliegt
alt kein gültiges tim-search-accesstoken vorhanden
cl -> hs: POST /_matrix/client/r0/user/{userId}/openid/request_token
activate hs
hs --> cl: HTTP 200 OK, Result body {"access_token": "Matrix-OpenID-Token",..., "matrix_server_name": "example.com",...}
deactivate hs
cl -> au: GET /tim-authenticate... (Auth Header mit Matrix-OpenID-Token)
activate au
au -> au: Prüfe ob matrix_server_name\nin Föderationsliste enthalten
au -> hs: GET /openid/userinfo/?\naccess_token=Matrix-OpenID-Token)
activate hs
hs --> au: HTTP 200 OK\n(Result Body MXID des Nutzers)
deactivate hs
au -> au: erzeuge tim-search-accesstoken für TI-Messenger-Client
au --> cl: HTTP 200 OK, Result body\n{"access_token"="accesstoken",\n"token_type":"bearer",\n"expires_in":86400}
deactivate au
end
cl -> fp: GET /tim-search?... (Auth Header mit\ntim-search-accesstoken)
activate fp
fp -> fp: prüfe tim-search-accesstoken
fp -> fp: werden TIPractitioner-Einträge gesucht?
alt TIPractitionerRole-Einträge werden gesucht
fp -> fd: GET /?...<eigene MXID>
activate fd
fd --> fp: HTTP 200 OK\n(Result Body json mit TIPractitioner-Eintrag)
fp -> fd: GET /?...
fd --> fp: HTTP 200 OK\n(Result Body json)
deactivate fd
end
alt TIHealthcareService-Einträge werden gesucht
fp -> fd: GET /?...
activate fd
fd --> fp: HTTP 200 OK\n(Result Body json)
deactivate fd
end
fp -> fp: prüfe telecom\nElemente\nund ergänze PASSporT
fp --> cl: HTTP 200 OK (Result Body json mit\nMXID und PASSporT)
deactivate fp
deactivate cl
@enduml
