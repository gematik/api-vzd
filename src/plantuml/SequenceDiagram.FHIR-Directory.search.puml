@startuml SequenceDiagram.FHIR-Directory.search
autonumber 1 1 "<b>[00]"
skinparam dpi 100
skinparam WrapWidth 200
skinparam monochrome true

'title "FHIR-Directory, Sequenzdiagram search'
actor Nutzer
participant cl as "TI-Messenger-Client"
box <size:16>FHIR-Directory</size> #WhiteSmoke
  participant fp as "FHIR-Proxy"
  participant au as "Auth-Service"
  participant fd as "FHIR-Directory"
end box
participant hs as "Matrix-Homeserver\n(Messenger-Proxy)"
activate cl

Nutzer -> cl:gibt FHIR-\nSuchparameter ein
cl -> cl: prüfe ob noch gültiges search-accesstoken\nvom FHIR-Directory Auth-Service vorliegt

alt kein gültiges search-accesstoken vorhanden
cl -> hs: POST /_matrix/client/v3/user/{userId}/openid/request_token
activate hs
hs --> cl: HTTP 200 OK, Result body {"access_token": "OFdZNozDIomXLrCWjgejIQBM",..., "matrix_server_name": "matrix.service-ti.de",...}
deactivate hs
cl -> au: GET /tim-authenticate?mxId=matrix.service-ti.de"\n -H "X-Matrix-OpenID-Token: OFdZNozDIomXLrCWjgejIQBM"
activate au
au -> au: Prüfe ob matrix.service-ti.de\nTeil der Föderationsliste ist
au -> au: Ermittele den hinterlegten UserInfo PORT über die Matrix Server URL
au -> hs: GET matrix.service-ti.de:{PORT}/_matrix/federation/v1/openid/userinfo\access_token=OFdZNozDIomXLrCWjgejIQBM
activate hs
hs --> au: HTTP 200 OK\nResult Body {"sub":"@testuser:matrix.service-ti.de"}
au -> au: Ermittle den Status von "isInsurance" für URL "matrix.service-ti.de"

alt [isInsurance=false]
au -> au: Erzeuge search-accesstoken: {...\n"aud":"https://fhir-directory.vzd.ti-dienste.de/search"\n...}
else [isInsurance=true]
au -> au: Erzeuge search-accesstoken: {...\n"aud":"https://fhir-directory.vzd.ti-dienste.de/fdv/search"\n...}
end

deactivate hs
au -> au: erzeuge search-accesstoken für TI-Messenger-Client
au --> cl: HTTP 200 OK, Result body\n{"access_token"="search-accesstoken", "token_type":"Bearer",\n"expires_in":86400}
deactivate au
end

cl -> fp: GET /search?... (Auth Header mit\nsearch-accesstoken)
activate fp
fp -> fp: prüfe search-accesstoken

alt search-accesstoken is valid
fp -> fd: GET /?...
activate fd
fd --> fp: HTTP 200 OK\n(Result Body json)
deactivate fd
fp --> cl: HTTP 200 OK (Result Body json)
else search-accesstoken is invalid
fp --> cl: HTTP 401
deactivate fp
end

deactivate cl
@enduml
