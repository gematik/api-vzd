@startuml SequenceDiagram.FHIR-Directory.search
skinparam dpi 100
skinparam WrapWidth 200
skinparam monochrome true

'title "FHIR-Directory, Sequenzdiagram search'
actor Nutzer
participant cl as "TI-Messenger-Client"
box <size:16>FHIR-Directory</size> #WhiteSmoke
  participant fp as "FHIR-Proxy"
  participant au as "Auth-Service"
  participant fd as "FHIR-Directory"
end box
participant hs as "Matrix-Homeserver\n(Messenger-Proxy)"
activate cl

Nutzer -> cl:gibt FHIR-\nSuchparameter ein
cl -> cl: prüfe ob noch gültiges search-accesstoken\nvom FHIR-Directory Auth-Service vorliegt

alt kein gültiges search-accesstoken vorhanden
cl -> hs: POST /_matrix/client/r0/user/{userId}/openid/request_token
activate hs
hs --> cl: HTTP 200 OK, Result body {"access_token": "Matrix-OpenID-Token",..., "matrix_server_name": "example.com",...}
deactivate hs
cl -> au: GET /tim-authenticate... (Auth Header mit Matrix-OpenID-Token)
activate au
au -> au: Prüfe ob matrix_server_name\nin Föderationsliste enthalten
au -> hs: GET /openid/userinfo/\nrequest header, Authorization: Bearer Matrix-OpenID-Token
activate hs
hs --> au: HTTP 200 OK\n(Result Body MXID des Nutzers)
deactivate hs
au -> au: erzeuge search-accesstoken für TI-Messenger-Client
au --> cl: HTTP 200 OK, Result body\n{"access_token"="search-accesstoken", "token_type":"bearer",\n"expires_in":86400}
deactivate au
end

cl -> fp: GET /search?... (Auth Header mit\nsearch-accesstoken)
activate fp
fp -> fp: prüfe search-accesstoken

alt search-accesstoken is valid
fp -> fd: GET /?...
activate fd
fd --> fp: HTTP 200 OK\n(Result Body json)
deactivate fd
fp --> cl: HTTP 200 OK (Result Body json)
else search-accesstoken is invalid
fp --> cl: HTTP 401
deactivate fp
end

deactivate cl
@enduml
