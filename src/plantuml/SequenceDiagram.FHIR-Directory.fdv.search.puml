@startuml
autonumber 1 1 "<b>[00]"
title "FHIR-VZD Authentisierung für Versicherte"


box Fachanwendung #WhiteSmoke
    participant VClient as "Client Versicherter"
    participant FDienst as "Fachdienst"
end box

box VZD-FHIR-Directory #WhiteSmoke
    participant "OAuth-Server" as VzdOAuth
    participant "Auth-Service" as VzdAuth
    participant fp as "FHIR-Proxy"
end box

VClient-> VClient: prüfe ob  gültiges ""search-access_token""\nvom FHIR-Directory Auth-Service vorliegt

alt kein gültiges search-access_token vorhanden
   VClient-> FDienst: Anfrage search-access_token

note left: Vor der Anfrage\nvom search-access_token\nmuss der Client authentisiert sein
   
   FDienst -> FDienst: client_id und client_secret\nz.B. aus config File lesen
   FDienst ->VzdOAuth++: POST /token (client_id, client_secret)
   VzdOAuth->VzdOAuth: prüfe client_id, client_secret
   VzdOAuth-->FDienst--: ""service-authz-token""

   FDienst->VzdAuth++: GET /service-authenticate \n Authorization:   Bearer {service-authz-token}

   VzdAuth->VzdAuth: Prüfe service-authz-token

   VzdAuth->VzdAuth: Erzeuge search-access_token
   VzdAuth-->FDienst: HTTP 200 OK\n{\n "access_token"="search-access_token",\n  "token_type":"bearer",\n "expires_in":86400\n}

   FDienst->FDienst: cache ""search-access_token""

   FDienst-->VClient: ""search-access_token""
end

== ...Suche durch Versicherte im FHIR VZD... ==

VClient -> fp: GET /fdv/search?... \nAuthorization: Bearer search-access_token
activate fp
fp -> fp: prüfe search-access_token

alt search-access_token ist gültig
   fp -> fp: suche im FHIR VZD
   fp --> VClient : HTTP 200 OK (Result Body json)
 else search-access_token ist ungültig
   fp --> VClient : HTTP 401
   deactivate fp
end

@enduml
