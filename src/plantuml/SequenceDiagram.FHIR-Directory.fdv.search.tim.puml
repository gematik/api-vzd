@startuml
autonumber 1 1 "<b>[00]"
title "FHIR-VZD Authentisierung für TI-Messenger-Nutzer (Versicherte)"

participant VClient as "TIM-Client Versicherter"

box VZD-FHIR-Directory #WhiteSmoke
    participant "OAuth-Server" as VzdOAuth
    participant "Auth-Service" as VzdAuth
    participant fp as "FHIR-Proxy"
end box

participant hs as "Matrix-Homeserver\n(Messenger-Proxy)"

VClient-> VClient: prüfe ob noch gültiges search-access-token\nvom FHIR-Directory Auth-Service vorliegt

alt kein gültiges search-access-token vorhanden
   VClient-> hs: POST /_matrix/client/r0/user/{userId}/openid/request_token
   activate hs
   hs --> VClient: HTTP 200 OK, Result body {"access_token": "Matrix-OpenID-Token",..., "matrix_server_name": "example.com",...}
   deactivate hs

   VClient->VzdAuth++: GET /tim-authenticate \nX-Matrix-OpenID-Token: Matrix-OpenID-Token

   VzdAuth-> VzdAuth: Prüfe ob matrix_server_name\nin Föderationsliste enthalten \nund prüfe das isInsurance Flag des matrix_server_name\nin der Föderationsliste
   VzdAuth-> hs: GET /openid/userinfo/\nrequest header, Authorization: Bearer Matrix-OpenID-Token
   activate hs
   hs --> VzdAuth: HTTP 200 OK\n(Result Body MXID des Nutzers)
   deactivate hs
   VzdAuth->VzdAuth: Erzeuge search-access-token\nbei isInsurance=true für die /fdv/search Schnittstelle,\nbei isInsurance=true für die /search Schnittstelle.
   VzdAuth--> VClient: HTTP 200 OK\n{\n  "access_token"="search-access-token",\n  "token_type":"bearer",\n  "expires_in":86400\n}
   deactivate VzdAuth

end

== ...Suche durch Versicherte im FHIR VZD... ==

VClient -> fp: GET /fdv/search?...\nAuthorization: Bearer search-access-token
activate fp
fp -> fp: prüfe search-access-token

alt search-access-token ist gültig
   fp -> fp: suche im FHIR-VZD
   fp --> VClient : HTTP 200 OK (Result Body json)
 else search-accesstoken ist ungültig
   fp --> VClient : HTTP 401
   deactivate fp
end

@enduml
