openapi: 3.0.1
info:
  title: I_Directory_Administration
  description: REST Schnittstelle zur Pflege der Verzeichniseinträge.
              Über diese Schnittstelle können Verzeichniseinträge inklusive Zertifikaten erzeugt, aktualisiert und gelöscht werden. Die Administration von Fachdaten erfolgt über Schnittstelle I_Directory_Application_Maintenance und wird durch die Fachanwendungen durchgeführt. Lesender Zugriff auf die Fachdaten ist mit Operation getDirectoryEntries in vorliegender Schnittstelle möglich.
  version: 1.12.1

  # Änderungen in Version 1.12.1 
  #  - Merge von Versionen 1.12.0 und 1.11.1
  #
  # Änderungen in Version 1.12.0 
  #  - Schema baseDirectoryEntry um Attribut providedBy erweitert. 
  #    Damit wird die Zusammenführung von mehreren LDAP Einträgen in einer FHIR Organisation möglich.
  #
  # Änderungen in Version 1.11.1
  #  - Schema baseDirectoryEntry um Attribut providedBy erweitert.
  #  - Operation read_Directory_Entry: Suchparameter für komLeData und kimData vereinfacht
  #
  # Änderungen in Version 1.11.0 
  #  - Schema FAD1 um kimData erweitert. Damit wird in read_Directory_Entry zusätzlich zu komLeData
  #    auch kimData im Response aufgenommen
  #  - Operation read_Directory_Entry: Suchparameter komLeData-appTags in kimData-appTags umbenannt
  #    und neue Suchparameter für kimData aufgenommen
  #
  # Änderungen in Version 1.10.0 
  #  - FAD1.komLeData.appTags (Anwendungskennzeichen) ergänzt
  #  - Operation read_Directory_Entry um Suchparameter für Fachdaten erweitert
  # 
  # Änderungen in Version 1.9.5
  #  - Attribut entryType aus Schema baseDirectoryEntry - aus Kompatibilitätsgründen zu 
  #    bisherigen Schnittstellenversionen - auf Datentyp "array" geändert
  # 
  # Änderungen in Version 1.9.4
  #  - Attribute active und meta in Operationen read_Directory_Entry_for_Sync und read_Directory_Entry_for_Sync_paging ergänzt
  #  - Operation readLog: Erlaubte Parameter für Suchanfragen in Kommentaren erläutert
  #
  # Änderungen in Version 1.9.3
  #  - "description" der Operationen mit Beschreibung der Attributbelegung überarbeitet 
  #  - Attribut usage aus Schema userCertificate und Operationen entfernt
  #    (wurde nicht mehr genutzt)
  # 
  # Änderungen in Version 1.9.2
  #  - Operation readLog: Parameter holder umbenannt in clientID
  #  - Beschreibung HTTP Status Kode 405 ergänzt
  # 
  # Änderungen in Version 1.9.1
  #  - Operation readLog vereinfacht 
  # 
  # Änderungen in Version 1.9.0
  #  - VZD:DirectoryRead Scope für Lesezugriff hinzugefügt und Scopes für jede Operation definiert
  #  - baseDirectoryEntry.entryType ist ein Wert (kein array mehr)
  #  - baseDirectoryEntry.entryType kann über die Schnittstelle modifiziert werden,
  #    wenn keine Zertifikate vorhanden sind
  #  - add_Directory_Entry, modify_Directory_Entry: HTTP Status Kode 400
  #    ergänzt/erweitert für Fehlerbehandlung von entryType Konflikten
  #  - Attribute in Schema baseDirectoryEntry und als Suchparameter 
  #    in Operation read_Directory_Entry ergänzt:
  #      active, meta 
  #  - Attribute im Schema userCertificate und als Suchparameter 
  #    in Operation read_Directory_Certificates ergänzt:
  #      serialNumber, issuer, publicKeyAlgorithm
  #  - Attribute im Schema userCertificate ergänzt:
  #      notBefore, notAfter
  #  - Attribute in Schema baseDirectoryEntry änderbar definiert:
  #      givenName, sn, cn
  #  - Operation stateSwitch_Directory_Entry hinzu gefügt
  #
  # Änderungen in Version 1.8.3
  #  - Operation readLog hinzugefügt
  #  - Suchparameter professionOID und entryType ergänzt in Operationen
  #    o read_Directory_Entry_for_Sync
  #    o read_Directory_Entry_for_Sync_paging
  #
  # Änderungen in Version 1.8.2
  #  - Fehlerbehandlung verbessert:
  #    o Schema Error: Optionale Fehlernachricht hinzugefügt
  #    o Für alle Fehler HTTP Status Kodes das Error Schema aufgenommen
  #    o Fehlercode 400 für Operationen read_Directory_Certificates, read_Directory_Entry_for_Sync, read_Directory_Entry_for_Sync_paging, read_Directory_Entry ergänzt
  #
  # Änderungen in Version 1.8.1
  #  - Attribute "KOM-LE-Version" in eine Liste geändert 
  #  - Attribut "active" für Zertifikate aufgenommen
  #
  # Änderungen in Version 1.8.0
  #  - Operation read_Directory_Entry_for_Sync: Zur Kompatibilität mit existierenden Clients wurde 
  #    read_Directory_Entry_for_Sync in der Version ohne Paging wieder aufgenommen.
  #    Die Operation mit Paging Mechanismus wurde in read_Directory_Entry_for_Sync_paging umbenannt.
  #  - Konkretisierung der Filtermöglichkeiten der Operationen read_Directory_Entry, 
  #    read_Directory_Entry_for_Sync und read_Directory_Entry_for_Sync_paging
  #  - Schema readDirectoryEntryforSyncResponse: Verschachtelung von directoryEntries reduziert.
  #  - Schema userCertificate: "required: dn" entfernt, da diese Attribute nicht im Request enthalten sein müssen.
  #
  # Änderungen in Version 1.7.0
  #  - Schema baseDirectoryEntry: "required: cn, dn" entfernt, da diese Attribute nicht im Request enthalten sein müssen.
  #  - Error Struktur angepasst (mehrere Fehlermeldungen ermöglicht)
  #  - Paging in Operation read_Directory_Entry_for_Sync aufgenommen
  #  - Filtermöglichkeiten in Leseoperationen read_Directory_Entry und
  #    read_Directory_Entry_for_Sync (Wildcard "*" & Vorhandensein \00) aufgenommen.
  #  - Suchparameter in Leseoperationen read_Directory_Entry und
  #    read_Directory_Entry_for_Sync aufgenommen:
  #    maxKOMLEadr, changeDateTimeFrom, changeDateTimeTo
  #  - Fehlercodes aus Version 1.5.2 übernommen:
  #     - Fehlercode 409 für Operation add_Directory_Entry_Certificate hinzugefügt.
  #     - Fehlercode 409 für Operation add_Directory_Entry hinzugefügt  (Basiseintrag bereits vorhanden).  
  #     - Fehlercode 400 für Operation add_Directory_Entry hinzugefügt  (generelle Fehlersituationen).  
  #  - Schema #/components/schemas/Error' korrigiert:
  #      In der bisherigen Definition war die Angabe von maxItems/minItems wirkungslos.
  #      Deshalb wird jetzt in dem Error Schema ein 'array' genutzt. 
  #
  # Änderungen in Version 1.6.3
  #  - Operation "delete_Directory_Entry_Certificate" hinzugefügt.
  #
  # Änderungen in Version 1.6.2
  #  - Im Datenmodell für Attribut "changeDateTime" den Format String "date-time" auskommentiert. Mit dieser Format Vorgabe ist kein Code mehr generierbar. Es soll sich aber weiterhin an das Format gehalten werden.
  #
  # Änderungen in Version 1.6.1
  #  - modify_Directory_Entry Operation - responses:
  #      Für Response 200 Header "X-maxKOMLEadr-Limit" hinzugefügt
  #      Über diesen Header wird dem Client angezeigt, ob die Anzahl der aktuell - in den Fachdaten - hinterlegten mail Adressen den Wert in Attribut maxKOMLEadr übersteigt. 
  #  - KOM-LE_Version in Schema FAD1 hinzugefügt
  #
  # Änderungen in Version 1.6.0
  #  - getInfo Operation - inklusive den dazugehörenden Schema Objekten "InfoObject", "Contact" und "License" - hinzugefügt.
  #  - Attribute professionOID und entryType zusätzlich in die Basisdaten - als Kopie aus den Zertifikatsdaten (userCertificate) aufgenommen. Diese Attribute wurden ebenfalls in die read_Directory_Entry Operation als Suchparameter aufgenommen.
  #
  # Änderungen in Version 1.5.2
  #  - Fehlercode 409 für Operation add_Directory_Entry_Certificate hinzugefügt (Zertifikat bereits vorhanden).
  #  - Fehlercode 409 für Operation add_Directory_Entry hinzugefügt  (Basiseintrag bereits vorhanden).  
  #  - Fehlercode 400 für Operation add_Directory_Entry hinzugefügt  (generelle Fehlersituationen).  
  #
  # Änderungen in Version 1.5.1
  #  - Header 'Accept: application/json' wird bei delete_Directory_Entry benötigt.
  #    Dies wird durch Angabe von "application/json" für den content von dem
  #    Response mit HTTP Status 200 gewährleistet. 
  #
  # Änderungen in Version 1.5.0
  #  - Attribut "owner" in "holder" umbenannt ("owner" ist in LDAP vordefiniert und kann deshalb nicht für den vorgesehenen Zweck genutzt werden)

  # Änderungen in Version 1.4.0
  #  - Operation read_Directory_Entry: Einschränkung auf 100 Suchergebnisse wieder eingeführt
  #  - Operation read_Directory_Entry_for_Sync: Für die Datensynchronisation der Herausgeber mit dem VZD wird diese Suchabfrage ohne Limitierung auf 100 Suchergebnisse ergänzt. Die parallele Ausführung dieser Operation wird vom Server aus Performancegründen eingeschränkt.
  #  - Attribut "usage" in Datenstruktur "userCertificate": "enum" im Format gestrichen.
  #
  # Änderungen in Version 1.3.0
  #  - Die direkte Suche von Verzeichniseinträgen (baseDirectoryEntry) mit dem 
  #  Suchparameter telematikID wird unterstützt.
  #     o telematikID im baseDirectoryEntry hinzugefügt und in 
  #       add_Directory_Entry, read_Directory_Entry und modify_Directory_Entry ergänzt
  #  - Paging Parameter entfernt (für eigene Verzeichniseinträge und Verzeichniseinträge 
  #    ohne owner wird die Begrenzung auf 100 Suchergebnisse aufgehoben)
  #  - Operation read_Directory_Entry: Suchparameter telematikID-SubStr ergänzt
  #  - Operation read_Directory_Entry: Suchparameter telematikID-SubStr ergänzt
  #  - Datenmodell: "baseDirectoryEntry"
  #     o Ländercode "countryCode" ergänzt und in Operationen hinzugefügt
  #     o Änderungsdatum "changeDateTime" ergänzt
  #
  # Änderungen in Version 1.2.2
  # Übernahme der Änderungen aus f_r313_hotfix_5 (version 1.1.2)
  #   - /DirectoryEntries
  #       get - Response Fehlercode 400 gestrichen. 
  #       Bei mehr als 100 gefundenen Einträgen werden nur 100
  #       gefundenen Einträge zurückgegeben (Response 200), falls kein Paging genutzt wird.
  #   - /DirectoryEntries/Certificates
  #       get - Response Fehlercode 400 gestrichen. 
  #       Bei mehr als 100 gefundenen Einträgen werden nur 100
  #       gefundenen Einträge zurückgegeben (Response 200).                                                                                             
  #
  # Änderungen in Version 1.2.1
  #   - /DirectoryEntries
  #       read_Directory_Entry: 
  #          Suchparameter "baseEntryOnly" ergänzt
  #
  # Änderungen in Version 1.2.0
  #   - /DirectoryEntries
  #       read_Directory_Entry: 
  #          Suchparameter "owner" ergänzt
  #          Paging Parameter ergänzt
  #   - searchControlValue für Paging der Suchergebnisse ergänzt
  #   - /DirectoryEntries/{uid}/baseDirectoryEntries:
  #        modify_Directory_Entry: Fehlerkode 422 ergänzt (ungültiger owner im Request Parameter)
  #   - /DirectoryEntries/{uid}/Certificates/{certificateEntryID}:
  #       put & delete - Operationen gestrichen
  #   -   schemas:
  #         baseDirectoryEntry:
  #           Attribute "owner" und "maxKOMLEadr" mit Beschreibung der Auswirkungen auf die Operationen hinzugefügt
  # Änderungen in Version 1.1.1
  #   - /DirectoryEntries/Certificates
  #       get - UID ist kein Pflichtparameter mehr um die Suche mit der TelematikID zu ermöglichen
  #   - Texte der HTTP Fehlercodes angepasst

externalDocs:
  description: Schnittstelle zur Pflege der Verzeichniseinträge
  url: http://github.com/gematik/api-vzd/
servers:
- url: https://vzdpflege-test.vzd.ti-dienste.de:9543/
  description: Testumgebung
- url: https://vzdpflege-ref.vzd.ti-dienste.de:9543/
  description: Referenzumgebung
- url: https://vzdpflege.vzd.ti-dienste.de:9543/
  description: Produktivumgebung
tags:
- name: getInfo DirectoryEntry Administration
  description: Diese Operation liefert Metadaten über diese Schnittstelle
- name: DirectoryEntry Administration
  description: Pflege der Verzeichniseinträge (Basiseinträge)
- name: Certificate Administration
  description: Pflege der Zertifikatseinträge 
- name: DirectoryEntry Synchronization
  description: Synchronisation der Verzeichniseinträge (Basiseinträge) mit dem eigenen Datenbestand
paths:
  /:
    get:
      tags:
      - getInfo DirectoryEntry Administration
      summary: Diese Operation liefert Metadaten über diese Schnittstelle
      security:
       - OAuth2: 
         - 'VZD:DirectoryAdministration'
         - 'VZD:DirectoryRead'
      description: Liefert die Metadaten aus dem Info Object diese OpenAPI Spezifikation und ergänzt sie.
      operationId: getInfo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/InfoObject'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /DirectoryEntries:
    post:
      tags:
      - DirectoryEntry Administration
      summary: Einen Eintrag zum Verzeichnisdienst hinzufügen
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
      operationId: add_Directory_Entry
      requestBody:
        description: |
                  Datensatz für den neuen Eintrag. \
                  Die Attribute müssen entsprechend der
                  Definition in "schemas" (siehe unten) und den sektorspezifischen Festlegungen
                  im "Implementierungsleitfaden zur Pflege der Daten des Verzeichnisdienstes"
                  (https://github.com/gematik/api-vzd/ Dokument docs/gemILF_Pflege_VZD.adoc)
                  belegt werden. \
                  
                  Entsprechend gemSpec_VZD wird ein Teil der Attribute durch den
                  Verzeichnisdienst automatisch mit Werten aus dem Zertifikat gefüllt. 
                  Wenn in dieser Operation Attribute - für die dies erlaubt ist - mit einem
                  Wert belegt werden, wird dieser Wert im Verzeichniseintrag gespeichert 
                  (auch wenn der Wert durch den Verzeichnisdienst aus dem Zertifikat entnommen 
                  werden kann). 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectoryEntry'
        required: true
      responses:
        201:
          description: Created
                     # Der Verzeichniseintrag wurde angelegt. Zurückgegeben wird der distinguishedName des erzeugten Eintrags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distinguishedName'
        400:
          description: Bad Request
                # Allgemeiner Fehler im Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                     # Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not Allowed
                     # Request-Header (Accept, Authorization) nicht valide 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
                # Verzeichniseintrag (identifiziert anhand der Telematik-ID) ist schon vorhanden.
                #      Die 'Error' Parameter werden für diese Fehler so gesetzt:
                #           "attributeName": "telematikID",
                #           "attributeError": "DirectoryEntry already exists"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
                # Z.B. Wert aus dem Request Attribut "holder" nicht gültig
                # Bei unterschiedlichen telematikIDs (Parameter telematikID und Wert im userCertificate) wird die Operation mit Fehlercode 422 abgelehnt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
      - DirectoryEntry Administration
      summary: Gesamten Verzeichniseintrag lesen
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
         - 'VZD:DirectoryRead'
      description: |
       Liefert alle zum Filter passenden Verzeichniseinträge (maximal 100 Einträge). Die angegebenen Parameter werden mit logischen UND verknüpft.
       
        Für die Leseoperationen read_Directory_Entry read_Directory_Entry_for_Sync der Schnittstellen I_Directory_Administration und I_Directory_Application_Maintenanc werden die folgenden Filtermöglichkeiten unterstützt: 
          - Suche mit Wildcard "*" in den Parametern
          
                  - givenName
                  - sn
                  - cn
                  - displayName
                  - streetAddress
                  - postalCode
                  - countryCode
                  - localityName
                  - stateOrProvinceName
                  - title
                  - organization
                  - otherName
                  - telematikID
                  - specialization
                  - domainID
                  - holder
                  - professionOID
                  - mail
                  - komLeData
                  - kimData    
          - Suche nach Vorhandensein oder leerem Inhalt eines Attributs des VZD Datensatzes mit dem Kode \00 in den Parametern
          
                  - givenName
                  - sn
                  - cn
                  - displayName
                  - streetAddress
                  - postalCode
                  - countryCode
                  - localityName
                  - stateOrProvinceName
                  - title
                  - organization
                  - otherName
                  - specialization
                  - domainID
                  - holder
                  - professionOID
                  - changeDateTimeFrom
                  - changeDateTimeTo
                  - mail
            Diese Suche findet sowohl Datensätze mit nicht vorhandenem Attribut wie auch vorhandenem aber leerem Attribut.
            Der Suchparameter darf nur den Kode \00 enthalten, keine weiteren Zeichen.
            Alle Filterparameter einer Leseoperationen werden mit einem UND (&) verknüpft.

      operationId: read_Directory_Entry
      parameters:
      - name: uid
        in: query
        description: ID von dem Verzeichniseintrag (distinguishedName.uid)
        schema:
          type: string  
      - name: givenName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs givenName.
        schema:
          type: string  
      - name: sn
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs sn.
        schema:
          type: string  
      - name: cn
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs cn.
        schema:
          type: string  
      - name: displayName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs displayName.
        schema:
          type: string  
      - name: streetAddress
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs streetAddress.
        schema:
          type: string  
      - name: postalCode
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs postalCode.
        schema:
          type: string  
      - name: countryCode
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs countryCode.
        schema:
          type: string    
      - name: localityName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs localityName.
        schema:
          type: string  
      - name: stateOrProvinceName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs stateOrProvinceName.
        schema:
          type: string  
      - name: title
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs title.
        schema:
          type: string  
      - name: organization
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs organization.
        schema:
          type: string  
      - name: otherName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs otherName.
        schema:
          type: string  
      - name: telematikID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).
        schema:
          type: string  
      - name: telematikID-SubStr
        in: query
        description: Erlaubt die Suche nach einem Substring am Anfang der telematikID (die telematikID in den Basisdaten).
                      Entspricht der LDAP Filters Substring Assertion vom Typ "subInitial Component".
        schema:
          type: string  
      - name: specialization
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs specialization. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.
        schema:
          type: string  
      - name: domainID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs domainID. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.
        schema:
          type: string  
      - name: holder
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs holder. 
                     Der Verzeichniseintrag wird selektiert, wenn der angegebene holder im Attribut holder (array) des Verzeichniseintrags enthalten ist.
                     Wenn der Parameter mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (maximal 100 Einträge).
                     Zur Suche nach Einträge ohne holder ist der Parameter mit einem leeren String "" zu belegen. Auch in diesem Fall werden alle gefundenen Einträge zurückgegeben (maximal 100 Einträge).
        schema:
          type: string  
      - name: personalEntry
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs personalEntry. 
        schema:
          type: string  
      - name: dataFromAuthority
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs dataFromAuthority. 
        schema:
          type: string  
      - name: professionOID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs professionOID. 
                     Selektiert den Verzeichniseintrag, wenn der angegebene Wert in den professionOID's (array) des Basiseintrags vorhanden ist. 
        schema:
          type: string  
      - name: entryType
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs entryType. 
                     Selektiert den Verzeichniseintrag, wenn der angegebene Wert in den entryType's (array) des Basiseintrags vorhanden ist. 
        schema:
          type: string  
      - name: maxKOMLEadr
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs maxKOMLEadr. 
        schema:
          type: string  
      - name: changeDateTimeFrom
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. 
                  #  Selektiert alle Datensätze mit 
                  #  changeDateTime >= changeDateTimeFrom
        schema:
          type: string  
          # format: date-time
          example: "2017-07-21T17:32:28Z"          
      - name: changeDateTimeTo
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. 
                  #  Selektiert alle Datensätze mit 
                  #  changeDateTime <= changeDateTimeTo
        schema:
          type: string  
          # format: date-time
          example: "2018-07-21T17:32:28Z"
      - name: baseEntryOnly
        in: query
        description: Mit baseEntryOnly = "true" wird nur der Basiseintrag (baseDirectoryEntry) im Response zurückgegeben. Falls nicht angegeben oder mit "false" belegt, wird der gesamte Verzeichniseintrag mit Zertifikaten und Fachdaten im Response zurückgegeben.
        schema:
          type: boolean
          example: true
      - name: active
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs baseDirectoryEntry.active.
        schema:
          type: boolean
      - name: meta
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs baseDirectoryEntry.meta
          
          Selektiert alle Datensätze, deren Attribut meta den angegebenen String in einem Wert des arry's enthält.
        schema:
          type: string  
      - name: mail
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs FAD1.mail
          
          Selektiert alle Datensätze, deren Attribut FAD1.mail den angegebenen String in einem Wert des arry's enthält.
        schema:
          type: string  
      - name: komLeData
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs FAD1.komLeData
          
          Selektiert alle Datensätze, deren Attribut FAD1.komLeData den angegebenen String in einem Wert des array's enthält.
          komLeData enthält die "version" und "mail" durch Komma getrennt in einem array.
          Beispiel: 1.0,mc_smcb_za@dom1.komle.telematik-test
          Für diesen Suchparameter kann ein Wildcard genutzt werden.
        schema:
          type: string  
      - name: kimData
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs FAD1.kimData.mail
          
          Selektiert alle Datensätze, deren Attribut FAD1.kimData.mail den angegebenen String in einem Wert des arry's enthält.
                    
          Selektiert alle Datensätze, deren Attribut FAD1.kimData den angegebenen String in einem Wert des array's enthält.
          komLeData enthält die "mail", "version" und "appTags" durch Komma getrennt in einem array.
          Die appTags werden durch das Pipe Zeichen getrennt. 
          Bitte beachten: Wenn das Pipe Zeichen im Suchstring genutzt wird muss die besondere
          Bedeutung dieses Zeichens bei der LDAP Suche beachtet werden.
          Beispiel: mz_smcb_za@dom2.kim.telematik-test,1.0,DALE-UV;Einsendung;V1.0|eEB;V1.0
          Für diesen Suchparameter kann ein Wildcard genutzt werden, z.B. 
            mz_smcb_za@dom2.kim.telematik-test*
        schema:
          type: string
        
      responses:
        200:
          description: OK
                    #  Es werden alle zu dem Filter Parametern passenden Verzeichniseinträge - inklusive Zertifikaten und Fachdaten - zurückgegeben.
                    # Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.   
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/DirectoryEntries'

        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /DirectoryEntriesSync:
    get:
      tags:
      - DirectoryEntry Synchronization
      summary: Synchronisation der Verzeichniseinträge zwischen VZD und Herausgeber
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
      description: |
       Liefert - analog zu read_Directory_Entry - alle zum Filter passenden 
       Verzeichniseinträge. \
       Im Unterschied zu read_Directory_Entry wird die Limitierung auf 100 Suchergebnisse
       aufgehoben. Die parallele Ausführung dieser Operation wird vom Server aus
       Performancegründen eingeschränkt.
       Diese Operation soll nur genutzt werden, wenn mehr als 100 Suchergebnisse benötigt 
       werden. 
       Für alle anderen Suchanfragen soll Operation read_Directory_Entry genutzt werden.
#
# Für die Leseoperationen read_Directory_Entry, read_Directory_Entry_for_Sync und
# read_Directory_Entry_for_Sync_paging der Schnittstellen I_Directory_Administration 
# und I_Directory_Application_Maintenance
# werden die folgenden Filtermöglichkeiten unterstützt: 
#     o Suche mit Wildcard "*" in den Parametern
#           - givenName
#           - sn
#           - cn
#           - displayName
#           - streetAddress
#           - postalCode
#           - countryCode
#           - localityName
#           - stateOrProvinceName
#           - title
#           - organization
#           - otherName
#           - telematikID
#           - specialization
#           - domainID
#           - holder
#           - professionOID
#       Wildcard ist am Ende und am Anfang nutzbar:
#           - *Mustermann* - "contains" 
#           - "Dr. Manfred*" - "startsWith"
#           - "* MBA" - "endsWith"
#           treffen alle "Dr. Manfred Mustermann MBA".
#
#      o Suche nach Vorhandensein ODER leerem Inhalt eines Attributs des 
#        VZD Datensatzes durch Belegung des Attributs im GET Request mit "" in den Parametern
#           - givenName
#           - sn
#           - cn
#           - displayName
#           - streetAddress
#           - postalCode
#           - countryCode
#           - localityName
#           - stateOrProvinceName
#           - title
#           - organization
#           - otherName
#           - specialization
#           - domainID
#           - holder
#           - professionOID
#           - maxKOMLEadr
#           - changeDateTimeFrom
#           - changeDateTimeTo
#        Diese Suche findet sowohl Datensätze mit nicht vorhandenem Attribut
#        wie auch vorhandenem aber leerem Attribut.
#     Alle Filterparameter einer Leseoperationen werden mit einem UND (&) verknüpft.
#        
      operationId: read_Directory_Entry_for_Sync
      parameters:
      - name: uid
        in: query
        description: ID von dem Verzeichniseintrag (distinguishedName.uid)
        schema:
          type: string  
      - name: givenName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs givenName.
        schema:
          type: string  
      - name: sn
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs sn.
        schema:
          type: string  
      - name: cn
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs cn.
        schema:
          type: string  
      - name: displayName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs displayName.
        schema:
          type: string  
      - name: streetAddress
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs streetAddress.
        schema:
          type: string  
      - name: postalCode
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs postalCode.
        schema:
          type: string  
      - name: countryCode
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs countryCode.
        schema:
          type: string    
      - name: localityName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs localityName.
        schema:
          type: string  
      - name: stateOrProvinceName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs stateOrProvinceName.
        schema:
          type: string  
      - name: title
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs title.
        schema:
          type: string  
      - name: organization
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs organization.
        schema:
          type: string  
      - name: otherName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs otherName.
        schema:
          type: string  
      - name: telematikID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).
        schema:
          type: string  
      - name: telematikID-SubStr
        in: query
        description: Erlaubt die Suche nach einem Substring am Anfang der telematikID (die telematikID in den Basisdaten).
                      Entspricht der LDAP Filters Substring Assertion vom Typ "subInitial Component".
        schema:
          type: string  
      - name: specialization
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs specialization. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.
        schema:
          type: string  
      - name: domainID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs domainID. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.
        schema:
          type: string  
      - name: holder
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs holder. 
                     Der Verzeichniseintrag wird selektiert, wenn der angegebene holder im Attribut holder (array) des Verzeichniseintrags enthalten ist.
                     Wenn der Parameter mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (für eigene Einträge gilt das Limit von 100 Ergebnissen nicht).
                     Zur Suche nach Einträge ohne holder ist der Parameter mit dem einem leeren String "" zu belegen. Auch in diesem Fall werden alle gefundenen Einträge zurückgegeben (für Einträge ohne holder gilt das Limit von 100 Ergebnissen nicht).
        schema:
          type: string  
      - name: personalEntry
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs personalEntry. 
        schema:
          type: string  
      - name: dataFromAuthority
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs dataFromAuthority. 
        schema:
          type: string  
      - name: professionOID
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs professionOID. 
         Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den professionOID's (array) des Basiseintrags vorhanden ist. 
        schema:
          type: string  
      - name: entryType
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs entryType. \
         Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den entryType's (array) des Basiseintrags vorhanden ist. 
        schema:
          type: string 
      - name: maxKOMLEadr
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs maxKOMLEadr. 
        schema:
          type: string  
      - name: changeDateTimeFrom
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. 
                  #  Selektiert alle Datensätze mit 
                  #  changeDateTime >= changeDateTimeFrom
        schema:
          type: string  
          # format: date-time
          example: "2017-07-21T17:32:28Z"          
      - name: changeDateTimeTo
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. 
                  #  Selektiert alle Datensätze mit 
                  #  changeDateTime <= changeDateTimeTo
        schema:
          type: string  
          # format: date-time
          example: "2018-07-21T17:32:28Z"
      - name: baseEntryOnly
        in: query
        description: Mit baseEntryOnly = "true" wird nur der Basiseintrag (baseDirectoryEntry) im Response zurückgegeben. Falls nicht angegeben oder mit "false" belegt, wird der gesamte Verzeichniseintrag mit Zertifikaten und Fachdaten im Response zurückgegeben.
        schema:
          type: boolean
          example: true
      - name: active
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs baseDirectoryEntry.active.
        schema:
          type: boolean
      - name: meta
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs baseDirectoryEntry.meta
          
          Selektiert alle Datensätze, deren Attribut meta den angegebenen String in einem Wert des arry's enthält.
        schema:
          type: string  

      responses:
        200:
          description: OK
                    #  Es werden alle zu dem Filter Parametern passenden Verzeichniseinträge - inklusive Zertifikaten und Fachdaten - zurückgegeben.
                    # Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.   
                    # Wenn der Suchparameter "holder" mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (für eigene Einträge gilt das Limit von 100 Ergebnissen nicht).
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/DirectoryEntries'

        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Service Unavailable
          # Der Server schränkt die parallele Nutzung dieser Operation read_Directory_Entry_WL ein. Der Request kann nach einer angemessenen Zeitspanne wiederholt werden. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  

  /v2/DirectoryEntriesSync:
    get:
      tags:
      - DirectoryEntry Synchronization
      summary: Synchronisation der Verzeichniseinträge zwischen VZD und Herausgeber
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
      description: |
       Liefert - analog zu read_Directory_Entry - alle zum Filter passenden 
       Verzeichniseinträge. \
       Im Unterschied zu read_Directory_Entry wird die Limitierung auf 100 Suchergebnisse 
       aufgehoben. 
       Die parallele Ausführung dieser Operation wird vom Server aus Performancegründen 
       eingeschränkt.
       Diese Operation soll nur genutzt werden, wenn mehr als 100 Suchergebnisse benötigt 
       werden. 
       Für alle anderen Suchanfragen soll Operation read_Directory_Entry genutzt werden.
#
# Für die Leseoperationen read_Directory_Entry, read_Directory_Entry_for_Sync und
# read_Directory_Entry_for_Sync_paging der Schnittstellen I_Directory_Administration 
# und I_Directory_Application_Maintenance
# werden die folgenden Filtermöglichkeiten unterstützt: 
#     o Suche mit Wildcard "*" in den Parametern
#           - givenName
#           - sn
#           - cn
#           - displayName
#           - streetAddress
#           - postalCode
#           - countryCode
#           - localityName
#           - stateOrProvinceName
#           - title
#           - organization
#           - otherName
#           - telematikID
#           - specialization
#           - domainID
#           - holder
#           - professionOID
#       Wildcard ist am Ende und am Anfang nutzbar:
#           - *Mustermann* - "contains" 
#           - "Dr. Manfred*" - "startsWith"
#           - "* MBA" - "endsWith"
#           treffen alle "Dr. Manfred Mustermann MBA".
#
#      o Suche nach Vorhandensein ODER leerem Inhalt eines Attributs des 
#        VZD Datensatzes durch Belegung des Attributs im GET Request mit "" in den Parametern
#           - givenName
#           - sn
#           - cn
#           - displayName
#           - streetAddress
#           - postalCode
#           - countryCode
#           - localityName
#           - stateOrProvinceName
#           - title
#           - organization
#           - otherName
#           - specialization
#           - domainID
#           - holder
#           - professionOID
#           - maxKOMLEadr
#           - changeDateTimeFrom
#           - changeDateTimeTo
#        Diese Suche findet sowohl Datensätze mit nicht vorhandenem Attribut
#        wie auch vorhandenem aber leerem Attribut.
#     Alle Filterparameter einer Leseoperationen werden mit einem UND (&) verknüpft.
#        
      operationId: read_Directory_Entry_for_Sync_paging
      parameters:
      - name: uid
        in: query
        description: ID von dem Verzeichniseintrag (distinguishedName.uid)
        schema:
          type: string  
      - name: givenName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs givenName.
        schema:
          type: string  
      - name: sn
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs sn.
        schema:
          type: string  
      - name: cn
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs cn.
        schema:
          type: string  
      - name: displayName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs displayName.
        schema:
          type: string  
      - name: streetAddress
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs streetAddress.
        schema:
          type: string  
      - name: postalCode
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs postalCode.
        schema:
          type: string  
      - name: countryCode
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs countryCode.
        schema:
          type: string    
      - name: localityName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs localityName.
        schema:
          type: string  
      - name: stateOrProvinceName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs stateOrProvinceName.
        schema:
          type: string  
      - name: title
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs title.
        schema:
          type: string  
      - name: organization
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs organization.
        schema:
          type: string  
      - name: otherName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs otherName.
        schema:
          type: string  
      - name: telematikID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).
        schema:
          type: string  
      - name: telematikID-SubStr
        in: query
        description: Erlaubt die Suche nach einem Substring am Anfang der telematikID (die telematikID in den Basisdaten).
                      Entspricht der LDAP Filters Substring Assertion vom Typ "subInitial Component".
        schema:
          type: string  
      - name: specialization
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs specialization. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.
        schema:
          type: string  
      - name: domainID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs domainID. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.
        schema:
          type: string  
      - name: holder
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs holder. 
                     Der Verzeichniseintrag wird selektiert, wenn der angegebene holder im Attribut holder (array) des Verzeichniseintrags enthalten ist.
                     Wenn der Parameter mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (für eigene Einträge gilt das Limit von 100 Ergebnissen nicht).
                     Zur Suche nach Einträge ohne holder ist der Parameter mit dem einem leeren String "" zu belegen. Auch in diesem Fall werden alle gefundenen Einträge zurückgegeben (für Einträge ohne holder gilt das Limit von 100 Ergebnissen nicht).
        schema:
          type: string  
      - name: personalEntry
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs personalEntry. 
        schema:
          type: string  
      - name: dataFromAuthority
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs dataFromAuthority. 
        schema:
          type: string  
      - name: professionOID
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs professionOID. 
         Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den professionOID's (array) des Basiseintrags vorhanden ist. 
        schema:
          type: string  
      - name: entryType
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs entryType. 
         Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den entryType's (array) des Basiseintrags vorhanden ist. 
        schema:
          type: string 
      - name: maxKOMLEadr
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs maxKOMLEadr. 
        schema:
          type: string  
      - name: changeDateTimeFrom
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. 
                  #  Selektiert alle Datensätze mit 
                  #  changeDateTime >= changeDateTimeFrom
        schema:
          type: string  
          # format: date-time
          example: "2017-07-21T17:32:28Z"          
      - name: changeDateTimeTo
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. 
                  #  Selektiert alle Datensätze mit 
                  #  changeDateTime <= changeDateTimeTo
        schema:
          type: string  
          # format: date-time
          example: "2018-07-21T17:32:28Z"
      - name: baseEntryOnly
        in: query
        description: Mit baseEntryOnly = "true" wird nur der Basiseintrag (baseDirectoryEntry) im Response zurückgegeben. Falls nicht angegeben oder mit "false" belegt, wird der gesamte Verzeichniseintrag mit Zertifikaten und Fachdaten im Response zurückgegeben.
        schema:
          type: boolean
          example: true
      - name: active
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs baseDirectoryEntry.active.
        schema:
          type: boolean
      - name: meta
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs baseDirectoryEntry.meta
          
          Selektiert alle Datensätze, deren Attribut meta den angegebenen String in einem Wert des arry's enthält.
        schema:
          type: string  

    # Paging Parameter entsprechend https://tools.ietf.org/html/rfc2696
    # Paging ist nur für eigene Verzeichniseinträge erlaubt. Deshalb muss bei
    # Verwendung des Pagings zwingend der "holder" Suchparameter angegeben werden 
    # und den eigenen holderID (entsprechend dem Wert im ID_Token claim scope) enthalten.
    # Siehe auch #/components/schemas/searchControlValue
      - name: size   
        in: query
        description: Paging Größe 
           # Entspricht realSearchControlValue.size in RFC2696.
           # Maximal diese Anzahl von Verzeichniseinträgen sind in einem Response enthalten. 
           # In dem nächsten Response sind die nächsten Verzeichniseinträge enthalten.
        schema:
         type: integer 
         example: 50
      - name: cookie  
        in: query
        description: Paging Cookie
          # Im ersten Request übergibt der Client einen leeren String in diesem Parameter. 
          # In den Folgerequests übernimmt der Client dieses Cookie jeweils aus dem letzten Response und erhält die nächsten Verzeichniseinträge.
        schema:
         type: string 
          
      responses:
        200:
          description: OK
                    #  Es werden alle zu dem Filter Parametern passenden Verzeichniseinträge - inklusive Zertifikaten und Fachdaten - zurückgegeben.
                    # Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.   
                    # Wenn der Suchparameter "holder" mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (für eigene Einträge gilt das Limit von 100 Ergebnissen nicht).
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/readDirectoryEntryforSyncResponse'

        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: Service Unavailable
          # Der Server schränkt die parallele Nutzung dieser Operation read_Directory_Entry_WL ein. Der Request kann nach einer angemessenen Zeitspanne wiederholt werden. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  



  /DirectoryEntries/{uid}/baseDirectoryEntries:
    put:
      tags:
      - DirectoryEntry Administration
      summary: Der Verzeichniseintrag (ohne Zertifikate und Fachdaten) wird mit den übergebenen Daten aktualisiert. 
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
      operationId: modify_Directory_Entry
      parameters:
      - name: uid
        in: path
        description: ID von dem Verzeichniseintrag
        required: true
        schema:
          type: string
      requestBody:
        description: |
         Datensatz für die Aktualisierung des Eintrags. \
         Die Attribute müssen entsprechend der Definition in "schemas" (siehe unten) und den 
         sektorspezifischen Festlegungen im "Implementierungsleitfaden zur Pflege der Daten 
         des Verzeichnisdienstes"
         (https://github.com/gematik/api-vzd/ Dokument docs/gemILF_Pflege_VZD.adoc)
          belegt werden.

        content:
          application/json:
            schema:
              $ref: '#/components/schemas/baseDirectoryEntry'
        required: true
      responses:
        200:
          description: OK
                     # Der Verzeichniseintrag wurde aktualisiert.
          headers:
            X-maxKOMLEadr-Limit:
              schema:
                type: integer
                example: 0
                description:  Anzahl der hinterlegten mail Adressen in den KOM-LE Fachdaten, die den aktuellen (nach eventuellem Update durch diese Operation) Wert Attribut maxKOMLEadr übersteigen.
                  Wenn der Parameter maxKOMLEadr im Request nicht genutzt wurde, wird ebenfall der aktuelle Wert von Attribut maxKOMLEadr als Berechnungsgrundlage genutzt.
                  Beispiele
                    a) maxKOMLEadr (nach Ausführung des Updates) = 1
                       hinterlegte mail Adressen in den KOM-LE Fachdaten = 1
                       -> X-maxKOMLEadr-Limit = 0
                    a) maxKOMLEadr (nach Ausführung des Updates) = 1
                       hinterlegte mail Adressen in den KOM-LE Fachdaten = 3
                       -> X-maxKOMLEadr-Limit = 2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distinguishedName'
        400:
          description: Bad Request
                     # Invalid ID supplied
                     # Fehler/Inkonsistenz in Attributen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                     # Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not Allowed
                     # Request-Header (Accept, Authorization) nicht valide           
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
                # Z.B. Wert aus dem Request Attribut "holder" nicht gültig
                # Bei unterschiedlichen telematikIDs (Parameter telematikID und Wert im userCertificate) wird die Operation mit Fehlercode 422 abgelehnt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

          
  /DirectoryEntries/{uid}:

    delete:
      tags:
      - DirectoryEntry Administration
      summary: Gesamten Verzeichniseintrag löschen
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
      operationId: delete_Directory_Entry
      parameters:
      - name: uid
        in: path
        description: |
         ID von dem zu löschenden Verzeichniseintrag. \
         Gelöscht werden der Basis Verzeichniseintrag sowie alle dazugehörenden Zertifikate und
         Fachdaten.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
                schema: {}
        400:
          description: Bad Request
                     # Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: | 
            Conflict
            
            Falls dem VZD Eintrag noch eine KIM-Adresse zugeordnet ist wird 
            die Löschung des Eintrags unterbunden.
            
            Stattdessen wird Eintrag:
            
                - baseDirectoryEntry.active=FALSE gesetzt
                - aus der flachen Liste entfernt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /DirectoryEntries/{uid}/active:

    put:
      tags:
      - DirectoryEntry Administration
      summary: |
        Status Verzeichniseintrag ändern.
        
        Mit dieser Operation kann das Attribut "baseDirectoryEntry.active" des Verzeichniseintrags geändert werden. Dazu muss in der Operation nur das Attribut "active" des Basisdatensatzes angegeben werden. Alle anderen Attribute des VZD Eintrags bleiben ungeändert.
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
      operationId: stateSwitch_Directory_Entry
      parameters:
      - name: uid
        in: path
        description: ID von dem Verzeichniseintrag
        required: true
        schema:
          type: string
      - name: active
        in: query
        description: Wert für das Attribut "baseDirectoryEntry.active"
        schema:
          type: boolean
        required: true  
        example: true
          
      responses:
        204:
          description: No Content
           # Die Anfrage wurde erfolgreich durchgeführt
          content:
            application/json:
                schema: {}
        400:
          description: Bad Request
                     # Invalid Value 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /DirectoryEntries/{uid}/Certificates:
    post:
      tags:
      - Certificate Administration
      summary: Der Zertifikatseintrag wird im Verzeichnisdienst hinzugefügt und ist logisch über dn.uid mit dem übergeordneten Verzeichniseintrag verknüpft.  
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
      operationId: add_Directory_Entry_Certificate
      parameters:
      - name: uid
        in: path
        description: ID (dn.uid) vom übergeordneten Verzeichniseintrag
        required: true
        schema:
          type: string
      requestBody:
        description: Datensatz für die Erzeugung des Eintrags

                     Die Attribute müssen wie folgt belegt sein

                      Attribut          Wert 
                     -------------------------------------------
                      dn.*              Nicht vorhanden (Adressierung erfolgt über uid in Path)    
                      telematikID       Kann optional belegt werden.
                            Wird telematikID angegeben, dann muss diese telematikID mit der telematikID im userCertificate übereinstimmen.
                            Die telematikID muss mit der telematikID in den Basisdaten (baseDirectoryEntry) übereinstimmen (falls dort angegeben).
                            Falls die telematikID in den Basisdaten (baseDirectoryEntry) leer ist, muss sie auf den Wert aus dem Zertifikat bzw. dem hier angegebenen Wert gesetzt werden.
                            Bei unterschiedlichen telematikIDs wird die Operation mit Fehlercode 422 abgelehnt.
                      entryType         Nicht vorhanden (wird vom Verzeichnisdienst belegt)        
                      professionOID     Nicht vorhanden (wird vom Verzeichnisdienst belegt)      
                      userCertificate   Muss vorhanden sein      
                      description       Kann optional belegt werden 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCertificate'
        required: true
      responses:
        201:
          description: Created
                      # Der Zertifikatseintrag wurde hinzugefügt. Zurückgegeben wird der distinguishedName des erzeugten Eintrags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distinguishedName'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not Allowed
                     # Request-Header (Accept, Authorization) nicht valide 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
                # Zertifikat (identifiziert anhand der Serial Number) ist für den 
                # Verzeichniseintrag (identifiziert anhand der Telematik-ID) schon vorhanden.
                #      Die 'Error' Parameter werden für diese Fehler so gesetzt:
                #           "attributeName": "userCertificate",
                #           "attributeError": "userCertificate already exists"
                # Wenn es sich um ein anderes / weiteres Zertifikat handelt (andere Serial Number), 
                # wird dieses normal hinzugefügt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity
            # Bei unterschiedlichen telematikIDs (Parameter telematikID und Wert im userCertificate) wird die Operation mit Fehlercode 422 abgelehnt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        

  /DirectoryEntries/Certificates:
  
    get:
      tags:
      - Certificate Administration
      summary: Zertifikat lesen
      description: Liefert alle Zertifikate, die dem Filter (siehe 'parameters') entsprechen.
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
         - 'VZD:DirectoryRead'
      operationId: read_Directory_Certificates
      parameters:
      - name: uid
        in: query
        description: ID vom übergeordneten Verzeichniseintrag
        schema:
          type: string
      - name: certificateEntryID
        in: query
        description: ID von dem Zertifikat (dn.cn vom Zertifikatseintrag)
                     Wenn angegeben wird das adressierte (certificateEntryID) Zertifikat geliefert.
                     Wenn nicht angegeben werden alle Zertifikate des übergeordneten Verzeichniseintrags geliefert.
        schema:
          type: string
      - name: entryType
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs entryType.
        schema:
          type: string
      - name: telematikID
        in: query
        description: telematikID von dem Zertifikat 
                     Erlaubt die Suche nach Zertifikatseinträgen einer telematikID.
        schema:
          type: string
      - name: professionOID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs professionOID. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene professionOID im Attribut professionOID (array) des Zertifikatseintrags enthalten ist.
        schema:
          type: string  
      - name: active
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs userCertificate.active. 
        schema:
          type: boolean  
      - name: serialNumber
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs userCertificate.serialNumber. 
        schema:
          type: string  
      - name: issuer
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs userCertificate.issuer. 
        schema:
          type: string  
      - name: publicKeyAlgorithm
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs userCertificate.publicKeyAlgorithm. 
        schema:
          type: string  

      responses:
        200:
          description: OK
                    #  Es werden alle gefundenen Zertifikatseinträge zurückgegeben.
                    # Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.                                                                                                         
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/userCertificates'

        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
                    #  Certificate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /DirectoryEntries/{uid}/Certificates/{certificateEntryID}:
    delete:
      tags:
      - Certificate Administration
      summary: |
       Zertifikatseintrag löschen. \
       Dem Verzeichniseintrag muss immer mindestens ein Zertifikat zugeordnet sein. Wenn nach 
       dem Löschen kein Zertifikat mehr dem Verzeichniseintrag zugeordnet wäre, muss die delete
       Operation abgelehnt werden. 
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
      operationId: delete_Directory_Entry_Certificate
      parameters:
      - name: uid
        in: path
        description: ID vom übergeordneten Verzeichniseintrag
        required: true
        schema:
          type: string
      - name: certificateEntryID
        in: path
        description: ID von dem zu löschenden Zertifikatseintrag
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bad Request
                    #  Invalid uid supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
                     # Certificate not found (certificateEntryID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
                     # nach dem Löschen wäre dem Verzeichniseintrag kein Zertifikat mehr zugeordnet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /Log:
    get:
      tags:
      - Log
      summary: Log von Verzeichniseinträgen lesen
      security:
       - OAuth2:
         - 'VZD:DirectoryAdministration'
         - 'VZD:DirectoryRead'
      description: |
       Liefert die Log Daten alle zum Filter passenden Verzeichniseinträge. \
       Die angegebenen Parameter werden mit logischen UND verknüpft.
      operationId: readLog
#
# Für Operation readLog werden folgende Kombinationen der Suchparameter erlaubt:
#      - UID + logTimeFrom (optional) +logTimeTo (optional)
#      - *telematikID* + logTimeFrom (optional) +logTimeTo (optional)
#      - *clientID* + logTimeFrom (optional) +logTimeTo (optional)
#      - operation + logTimeFrom (optional) +logTimeTo (optional)
#      - noDataChanged + logTimeFrom (optional) +logTimeTo (optional)
#      - logTimeFrom +logTimeTo
#      - logTimeFrom
#      - logTimeTo
#   Andere Kombinationen der Suchparameter werden mit 400 bad request beantwortet.
#
# Für die Leseoperationen read_Directory_Entry, read_Directory_Entry_for_Sync,
# read_Directory_Entry_for_Sync_paging und readLog der Schnittstellen I_Directory_Administration 
# und I_Directory_Application_Maintenance
# werden die folgenden Filtermöglichkeiten unterstützt: 
#     o Suche mit Wildcard "*" in den Parametern
#           - telematikID
#           - clientID
#           - professionOID
#       Wildcard ist am Ende und am Anfang nutzbar:
#           - *Mustermann* - "contains" 
#           - "Dr. Manfred*" - "startsWith"
#           - "* MBA" - "endsWith"
#           treffen alle "Dr. Manfred Mustermann MBA".
#
      parameters:
      - name: uid
        in: query
        description: ID von dem Verzeichniseintrag (distinguishedName.uid)
        schema:
          type: string  
      - name: telematikID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).
        schema:
          type: string  
      - name: clientID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs clientID. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene clientID im Log-Datensatz enthalten ist.
        schema:
          type: string  
      - name: logTimeFrom
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs logTime. 
                  #  Selektiert alle Datensätze mit 
                  #  logTime >= logTimeFrom
        schema:
          type: string  
          # format: date-time
          example: "2017-07-21T17:32:28Z"          
      - name: logTimeTo
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs logTime. 
                  #  Selektiert alle Datensätze mit 
                  #  logTime <= logTimeTo
        schema:
          type: string  
          # format: date-time
          example: "2018-07-21T17:32:28Z"
      - name: operation
        in: query
        description: Erlaubt die Suche anhand der ausgeführten Operation
        schema:
          type: string
          enum: [add_Directory_Entry, 
                 modify_Directory_Entry, 
                 delete_Directory_Entry, 
                 add_Directory_Entry_Certificate, 
                 delete_Directory_Entry_Certificate, 
                 add_Directory_FA-Attributes, 
                 modify_Directory_FA-Attributes, 
                 delete_Directory_FA-Attributes]
      - name: noDataChanged
        in: query
        description: Erlaubt die Suche nach Log Daten für Schreiboperationen, die keine Daten geändert haben. 
          (noDataChanged=true -> durch diese Operation wurden keine Daten geändert)
        schema:
          type: boolean  
          example: flase

      responses:
        200:
          description: OK
                    #  Es werden die Logdaten aller zu dem Filter Parametern passenden Verzeichniseinträgen zurückgegeben.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/LogEntries'
        400:
          description: Bad Request
            # z.B. Kombinationen der Suchparameter nicht erlaubt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  

components:

  schemas:

    userCertificate:
      description: Jeder Verzeichniseintrag muss mindestens ein Zertifikat enthalten.
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        entryType:
          type: string
          description: 'Eintragstyp Wird vom VZD anhand der in dem Zertifikat
            enthaltenen OID (Extension Admission, Attribut ProfessionOID) und der
            Spalte Eintragstyp in Tab_VZD_Mapping_Eintragstyp_und_ProfessionOID automatisch
            eingetragen. Siehe auch [gemSpecOID]# Tab_PKI_402 und Tab_PKI_403'
          readOnly: true
        telematikID:
          type: string
          description: 'Wird beim Anlegen des Eintrags vom VZD aus dem Zertifikat übernommen (Feld registrationNumber der Extension Admission).
                    Falls der Basiseintrag (baseDirectoryEntry) ohne Zertifikat angelegt wird, kann in Operation add_Directory_Entry die telematikID angegeben werden.
            Damit ist der Verzeichniseintrag bereits über die telematikID auffindbar.'
        professionOID:
          maxItems: 100
          minItems: 0
          type: array
          readOnly: true
          items:
            type: string
            description: 'Profession OID / Wird vom VZD anhand der in
              den Zertifikaten enthaltenen OIDs (Extension Admission, Attribut ProfessionOID)
              und dem Mapping in ab_VZD_Mapping_Eintragstyp_und_ProfessionOID automatisch
              eingetragen. Siehe [gemSpecOID]# Tab_PKI_402 und Tab_PKI_403. / kann
              mehrfach vorkommen (0..100)'
        userCertificate:
          type: string
          description: 'Zertifikat im DER Format. Base64 kodiert.
                        Die pflegende Stelle erhält das Zertifikat vom TSP oder falls das nicht möglich ist wird ein Ersatzverfahren abgestimmt.'
        description:
          type: string
          description: Dieses Attribut ermöglicht das Zertifikat zu beschreiben, um
             die Administration des VZD Eintrags zu vereinfachen.
        active:
          type: boolean
          readOnly: true
          example: true
          description: Dieses Attribut eigt an, ob das Zertifikat aktiv ist oder nicht (true oder false).
        notBefore:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "notBefore" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
            Wird vom VZD für die periodische Auswertung der Zertifikats-Gültigkeit genutzt.
          readOnly: true
          example: '2017-12-04T01:00:00'
        notAfter:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "notAfter" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
            Wird vom VZD für die periodische Auswertung der Zertifikats-Gültigkeit genutzt.
          readOnly: true
          example: '2022-12-04T00:59:59'
        serialNumber:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "serialNumber" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
          readOnly: true
          example: 80276883110000092581
        issuer:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "issuer" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
          readOnly: true
          example: 'CN=GEM.SMCB-CA8 TEST-ONLY,OU=Institution des Gesundheitswesens-CA der Telematikinfrastruktur,O=gematik GmbH NOT-VALID,C=DE'
        publicKeyAlgorithm:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "publicKeyAlgorithm" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
          readOnly: true
          example: RSA

    userCertificates:
      type: array
      items:
        $ref: '#/components/schemas/userCertificate'
            
    Fachdaten:
      required:
      - dn
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        FAD1:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/FAD1'

    FAD1:
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        mail:
          type: array
          items:
            type: string
            description: 'E-Mail-Adresse'
        komLeData:
          type: array
          items:
            type: object
            properties:
              mail:
                type: string
                description: 'E-Mail-Adresse'
              version:
                type: string
                example: 1.5+
                description: 'Die höchste Version der KIM Clientmodule für diese KIM-Mail-Adresse'
            description: |
              Liste von KIM-Adressen mit der zugehörigen KIM-Version. 
              Für jede Mail Adresse darf nur einen Element in der Liste `komLeData` existieren. 
              Geschrieben wird immer die gesamte Liste. 
              Für Änderungen muss erst der aktuelle Eintrag gelesen werden und nach Änderung in der Liste der gesamte Eintrag wieder geschrieben werden.
              Die Datenstruktur komLeData wird in LDAP in folgendem Attribut als String abgelegt:
                - komLeData: In diesem Attribut werden aus Kompatibilitätsgründen weiterhin die Attribute "mail" und "version" abgelegt. 
                  Format des LDAP Attributes:  mail,version
                  Beispiele der LDAP Darstellung:
                     komLeData: 1.5+,mc_smcb_za@dom1.komle.telematik-test 
                     komLeData: 1.0,mz_smcb_za@dom2.kim.telematik-test
        kimData:
          type: array
          items:
            type: object
            properties:
              mail:
                type: string
                description: 'E-Mail-Adresse'
              version:
                type: string
                example: 1.5+
                description: 'Die höchste Version der KIM Clientmodule für diese KIM-Mail-Adresse'
              appTags:
                type: array
                items:
                  type: string
                  example: 
                    - eEB;V1.0
                    - DALE-UV;Einsendung;V1.0
                  description: 'Anwendungskennzeichen, welche diese KIM-Mail-Adresse verarbeiten kann'
            description: |
              Liste von KIM-Adressen mit der zugehörigen KIM-Version und Anwendungskennzeichen. 
              Für jede Mail Adresse darf nur einen Element in der Liste `kimData` existieren. 
              Geschrieben wird immer die gesamte Liste. 
              Für Änderungen muss erst der aktuelle Eintrag gelesen werden und nach Änderung in der Liste der gesamte Eintrag wieder geschrieben werden.
              Die Datenstruktur kimData wird in LDAP in folgendem Attribut als String abgelegt:
                - kimData: In diesem Attribut werden die Attribute "mail", "version" und "appTags" abgelegt. 
                  Format des LDAP Attributes:  mail,version,appTag1|appTag2|appTag3
                  Beispiele der LDAP Darstellung:
                     kimData: mc_smcb_za@dom1.komle.telematik-test,1.5+,eEB;V1.0 
                     kimData: mz_smcb_za@dom2.kim.telematik-test,1.0,DALE-UV;Einsendung;V1.0|eEB;V1.0

    distinguishedName:
      required:
      - uid
      readOnly: true
      type: object
      properties:
        uid:
          type: string
          description: 'entryID: Name/ID, den den Eintrag eindeutig identifiziert. Hat für den Verzeichnisdienst_Eintrag, Certificate, KOM-LE_Fachdaten und FAD1 eines Verzeichniseintrags den gleichen Wert.'
        dc:
          type: array
          items:
            type: string
            description: Domain Component
        ou:
          type: array
          items:
            type: string
            description: Organizational Unit
        cn:
          type: string
          description: Common Name

    baseDirectoryEntry:
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        givenName:
          type: string
          description: 'HBA: Vorname, obligatorisch, wird aus dem Zertifikat
            übernommen / SMC-B: nicht verwendet'
          example:  Vorname
        sn:
          type: string
          description: 'HBA: Name, obligatorisch, wird aus dem Zertifikat
            übernommen / SMC-B: nicht verwendet'
          example:  Nachname
        cn:
          type: string
          description: 'HBA: Vorname und Nachname / SMC-B: Bezeichner:
            Name Wird vom VZD aus dem Zertifikatsattribut commonName übernommen.'
          example:  Vorname Nachname  
        displayName:
          type: string
          description: 'Anzeigename, kann geändert werden. 
            Dieses Attribut wird genutzt um den Namen der Organisation gegenüber dem Anwender darzustellen (Verwendung als Filter-Attribut um die Suche einzuschränken und bei der Darstellung des Ergebnisses).
              Der Wert wird von der pflegenden Stelle festgelegt.
              Konvention für HBA Einträge: Name, Vorname'
          example:  Name, Vorname
        streetAddress:
          type: string
          description: 'Straße und Hausnummer
                        Der Wert wird von der pflegenden Stelle festgelegt'
          example: Friedrichstraße 136
        postalCode:
          type: string
          description: 'Postleitzahl
                        Der Wert wird von der pflegenden Stelle festgelegt'
          example: 10117
        countryCode:
          type: string
          maxLength: 2
          description: 'Ländercode
                        Entsprechend ISO-3166-1 ALPHA-2'
                    # Falls das Attribut beim Anlegen des Datensatzes nicht beölegt wird, ergänzt der VZD den Code für Deutschland (Defaultwert).
          example: DE        
        localityName:
          type: string
          description: 'Ort
                        Der Wert wird von der pflegenden Stelle festgelegt'
          example: Berlin
        stateOrProvinceName:
          type: string
          description: 'Bundesland
                        Der Wert wird von der pflegenden Stelle festgelegt'
          example: Berlin
        title:
          type: string
          description: 'HBA: Titel, optional / SMC-B: nicht verwendet'
        organization:
          type: string
          example: 12345670
          description: 'Organisation
                        Der Wert wird von der pflegenden Stelle festgelegt'
        otherName:
          type: string
          description: 'Anderer Name. 
                        Wird vom VZD aus dem Zertifikatsattribut otherName übernommen.'
        telematikID:
          type: string
          description: 'Wird beim Anlegen des Eintrags vom VZD aus dem Zertifikat übernommen (Feld registrationNumber der Extension Admission).
                    Falls der Basiseintrag (baseDirectoryEntry) ohne Zertifikat angelegt wird, kann in Operation add_Directory_Entry die telematikID angegeben werden.
            Damit ist der Verzeichniseintrag bereits über die telematikID im baseDirectoryEntry auffindbar. Diese telematikID muss mit der telematikID aus dem Zertifikatseintrag (userCertificate) übereinstimmen. Simmten die telematikIDs nicht überein, wird die Operation mit Fehlercode 422 abgelehnt' 
        providedBy:
          type: string
          description: |
           Erlaubt die Zusammenführung von mehreren LDAP Einträgen in einer FHIR Organisation.
           In Attribut providedBy wird dazu die telematikID der übergeordneten Oragnisation eingetragen.
           Wird in Attribut "providedBy" im LDAP VZD Eintrag eine TelematikID eingetragen, 
           wird für den LDAP Eintrag im FHIR VZD ein HealthcareService unter der - mit der TelematikID -
           referenzierten Organisation generiert.
           Randbedingungen:
            - Es wird nur eine Hierarchieebene unterstützt (providedBy vom referenzierten Datensatz
              MUSS leer sein)
            - Es können nur Organisationseinträge zusammengeführt/verlinkt werden (personalEntry=false)
            - Das Attribut "providedBy" darf nur eine TelematikID enthalten.
            - Der Client - der dieses Attribut setzt - MUSS auch für den referenzierten 
              LDAP Datensatz als Holder eingetragen sein.
            - Wenn Attribut providedBy gesetzt wurde, kann es nur zurückgesetzt 
              (Inhalt auf leer gesetzt) werden. Eine Änderung auf einen anderen Wert 
              wird nicht unterstützt.  
            - Vor Löschung eines LDAP VZD Eintrags müssen alle Verlinkungen über Attribut "providedBy"
              von anderen Datensätzen auf den zu löschenden Datensatz entfernt werden.  
            Bei Nichteinhaltung der Randbedingungen wird die Schreiboperation (POST/PUT) mit
            Fehler (HTTP Status 400) und entsprechendem Fehlertext beendet.
        specialization:
          maxItems: 100
          type: array
          description: 'Fachgebiet
                        Der Wert wird von der pflegenden Stelle festgelegt'
          items:
            type: string
        domainID:
          maxItems: 100
          type: array
          description: 'Ärzte-> Betriebsstättennummer
                        Der Wert wird aus dem Zertifikat übernommen (Attribut organizationName)'
          items:
            type: string
            example: 345678975
        holder:
          maxItems: 100
          type: array
          description: |
            Identifiziert den Eigentümer dieses Verzeichniseintrags, der Änderungen an ihm vornehmen darf.
            Hat keinen Einfluss auf Fachdaten und Zertifikatsdaten.
            Beim Anlegen eines neuen Verzeichniseintrags (add_Directory_Entry)
              - Ist im add_Directory_Entry Request das Attribut "holder" nicht vorhanden oder enthält keine Werte
                 - Wird vom VZD in dieses Attribut kein Wert (leeres Attribut) eingetragen. 
              - Ist im add_Directory_Entry Request das Attribut "holder" vorhanden und mit Inhalten gefüllt
                 - Ist ein Wert aus dem Request Attribut "holder" nicht gültig, MUSS der VZD die Operation mit 
                 HTTP-Status-Code 422 abweisen und die weitere Verarbeitung von diesem Request abbrechen.
                 - Sind alle Werte aus dem Request Attribut "holder" gültig, MUSS der VZD die Werte aus dem Request 
                 entnehmen und sie in das "holder" Attribut des Verzeichniseintrags übernehmen.
            Beim Ändern eines neuen Verzeichniseintrags (modify_Directory_Entry)
              - Ist im modify_Directory_Entry Request das Attribut "holder" nicht vorhanden oder enthält keine Werte
                 - Die Werte im aktuellen "holder" Attribut des Verzeichniseintrags bleiben erhalten.
          items:
            type: string
            example: KartenHerausgeberABC
        maxKOMLEadr:
          type: string
          description: Maximale Anzahl von mail Adressen in den KOM-LE Fachdaten. Falls kein Wert eingetragen wurde, können beliebig viele mail Adressen in den KOM-LE Fachdaten eingetragen werden. Falls ein Wert eingetragen wurde, können maximal so viele mail Adressen in den KOM-LE Fachdaten eingetragen werden.
          example: 1
        personalEntry:
          type: boolean
          description: |
            - Wird vom VZD eingetragen 
            - Wird auf Basis von entryType bei jeder relevanten Operation neu ermittelt
            - Wert == TRUE, wenn entryType den Wert 1 hat (Berufsgruppe), Wert == FALSE sonst
          readOnly: true
          example: true
        dataFromAuthority:
          type: boolean
          description: Wird vom VZD eingetragen / Wert == TRUE, wenn der Verzeichnisdienst_Eintrag von dem Kartenherausgeber geschrieben wurde, Wert == FALSE sonst 
          readOnly: true
          example: true
        changeDateTime:
          type: string
#          format: date-time Mit dieser Format Vorgabe ist kein Code mehr generierbar, deshalb auskommentiert. Es soll sich aber weiterhin an das Format gehalten werden.
          description: Der VZD setzt dieses Attribut bei jeder Schreiboperation für den Datensatz (Basisdaten) und die zugeordneten Zertifikate auf die aktuelle Zeit. Format entsprechend RFC 3339, section 5.6.
          readOnly: true
          example: "2017-07-21T17:32:28Z"
        professionOID:
          maxItems: 100
          minItems: 0
          type: array
          readOnly: true
          items:
            type: string
            description: Wird vom VZD beim Hinzufügen eines Zertifikatseintrags (userCertificate) ebenfalls hier in den Basiseintrag eingefügt, wenn der Wert von professionOID noch nicht hier in den Basisdaten vorhanden ist.
              Beim Löschen eines Zertifikatseintrags werden die professionOID's dieses Zertifikatseintrags auch in den Basisdaten entfernt, falls sie nicht in anderen (noch gültigen und verlinkten) Zertifikatseinträgen vorhanden sind.
        entryType:
          maxItems: 1
          minItems: 0
          type: array
          items:
            type: string
            description: |
             - Wird vom VZD beim Hinzufügen eines Zertifikatseintrags (userCertificate) ebenfalls hier in den Basiseintrag eingefügt, wenn der Wert von entryType noch nicht hier in den Basisdaten vorhanden ist.
              - Mit Operationen add_Directory_Entry und modify_Directory_Entry ist  Setzen/Ändern von Attribut entryType möglich. Der Wert von Attribut entryType muss konform zu den Zertifikaten des Eintrags sein. Bei Abweichungen wird die Operation mit HTTP Status Kode 400 abgelehnt.
                - Wird in Operationen add_Directory_Entry ein Zertifikat angegeben wird, muss ein eventuell angegebener Parameter entryType mit dem Wert aus dem Zertifikat übereinstimmen. Bei nicht angegebenem Parameter entryType wird das Attribut entryType entsprechend dem Zertifikat gesetzt.
                - Mit Operation modify_Directory_Entry kann über Request Parameter entryType das Attribut im VZD geändert werden, solange kein Zertifikat im VZD enthalten ist (welches dann einen abweichenden Wert gegenüber dem Request Parameter entryType enthalten würde).
             - Wenn mit Operation add_Directory_Entry_Certificate ein neues Zertifikat hinzu gefügt wird - welches in Bezug auf Attribut entryType vom Basisdatensatz abweicht - dann führt das zum Abbruch der Operation mit Fehler (HTTP Status Kode 400).
             - Beim Löschen von Zertifikaten bleibt der Wert im Attribut entryType erhalten
        active:
            type: boolean
            example: true
            default: true
            description: |
              Das Attribut "active" steuert die Sichtbarkeit des gesamten VZD Eintrags.
              Bei FALSE wird der Eintrag aus der flachen Liste entfernt bzw. nicht übertragen. Default = TRUE
              
              Dieses Attribut wird nicht in die flache Liste synchronisiert. 
        meta:
          maxItems: 100
          minItems: 0
          type: array
          items:
            type: string
            description: |
              Dieses Attribut kann vom Kartenherausgeber und TSP für die Koordinierung ihrer Arbeit genutzt werden.
              Beispiel für die Nutzung:
               - TSP erzeugt einen VZD Eintrag.
               - TSP setzt das Attribut "meta" auf "state_1"
               - Kartenherausgeber prüft periodisch auf Einträge mit meta="state_1" und ergänzt Basisdaten
              Der konkrete Ablauf und die Werte werden durch die beteiligten Kartenherausgeber und TSPs festgelegt.
              
              Wird vom VZD nicht ausgewertet.
              Dieses Attribut wird nicht in die flache Liste synchronisiert. 
  

    DirectoryEntry:
      type: object
      properties:
        DirectoryEntryBase:
          $ref: '#/components/schemas/baseDirectoryEntry'
        userCertificates:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/userCertificate'
        Fachdaten:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Fachdaten'

    CreateDirectoryEntry:
      type: object
      properties:
        DirectoryEntryBase:
          $ref: '#/components/schemas/baseDirectoryEntry'
        userCertificates:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/userCertificate'

    DirectoryEntries:
      type: array
      items:
        $ref: '#/components/schemas/DirectoryEntry'

    LogEntries:
      type: array
      items:
        $ref: '#/components/schemas/LogEntry'

    LogEntry:
      type: object
      properties:
        clientID:
          description: clientID von dem Client, der die Datenänderung ausgeführt hat
          type: string
          readOnly: true
          example: Client123
        logTime:
          type: string
#          format: date-time 
          description: Zeitpunkt der Schreiboperation für den Datensatz. Format entsprechend RFC 3339, section 5.6.
          readOnly: true
          example: "2017-07-21T17:32:28Z"
        uid:
          type: string
          description: Name/ID, den den Eintrag eindeutig identifiziert. 
        telematikID:
          type: string
          description: telematikID von dem geänderten VZD Eintrag
        operation:
          description: Ausgeführte Operation
          type: string
          enum: [add_Directory_Entry, 
                 modify_Directory_Entry, 
                 delete_Directory_Entry, 
                 stateSwitch_Directory_Entry,
                 add_Directory_Entry_Certificate, 
                 delete_Directory_Entry_Certificate, 
                 add_Directory_FA-Attributes, 
                 modify_Directory_FA-Attributes, 
                 delete_Directory_FA-Attributes]
          readOnly: true
          example: modify_Directory_Entry
        noDataChanged:
          description: Zeigt an, ob die Schreiboperation den Datensatz mit ungeänderten Daten überschieben hat (also keine Daten geändert hat)
            noDataChanged=true -> durch diese Operation wurden keine Daten geändert.
          type: boolean
          readOnly: true
          example: false


    Error:
      type: object
      properties:
        message: 
          type: string
          description: (optionale) Fehlernachricht
        errors:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/InnerError'

    InnerError:
      type: object
      properties:
        attributeName:
          description: Name des Attributs, in dem ein Fehler erkannt wurde
          type: string
        attributeError:
          description: Beschreibung des erkannten Fehlers
          type: string

    InfoObject:
      required:
      - title
      - version
      readOnly: true
      type: object
      properties:
        title:
          type: string
          description: Der Titel der Anwendung
          example: "I_Directory_Administration"
        description:
          type: string
          description: Eine kurze Beschreibung der Anwendung
          example: "REST Schnittstelle zur Pflege der Verzeichniseinträge.
            Über diese Schnittstelle können Verzeichniseinträge inklusive Zertifikaten erzeugt, aktualisiert und gelöscht werden. Die Administration von Fachdaten erfolgt über Schnittstelle I_Directory_Application_Maintenance und wird durch die Fachanwendungen durchgeführt. Lesender Zugriff auf die Fachdaten ist mit Operation getDirectoryEntries in vorliegender Schnittstelle möglich."
        termsOfService:
          type: string
          format: uri
          description: Eine URL zu den Terms of Service für dieses API.
          example: "http://example.com/terms/"
        contact:
          $ref: '#/components/schemas/contact'
        license:
          $ref: '#/components/schemas/license'
        version:
          type: string
          description: Die Version von dem OpenAPI Document (YAML Datei)
          example: "1.6.0"

    contact:
      readOnly: true
      description: Die Kontaktinformationen für diese Schnittstelle.
      type: object
      properties:
        name:
          type: string
          description: Der Name von der Kontaktperson / -Organisation
          example: "Firma 123"
        url:
          type: string
          format: uri
          description: Eine URL zu den Kontaktinformationen für dieses API.
                       In dem Dokument unter dieser URL muss ein Link zum Download der aktuell genutzten YAML Datei dieser Schnittstelle hinterlegt sein.
          example: "http://www.example.com/support"
        email:
          type: string
          format: email
          description: Der E-Mail Adresse der Kontaktperson / -Organisation.
          example: "support@example.com"

    license:
      required:
      - name
      readOnly: true
      description: Der Lizenzinformationen für diese Schnittstelle.
      type: object
      properties:
        name:
          type: string
          description: Der Lizenzname
          example: "Apache 2.0"
        url:
          type: string
          description: Eine URL zu den Lizenzinformationen für dieses API.
          example: "https://www.apache.org/licenses/LICENSE-2.0.html"

    searchControlValue:
    # https://tools.ietf.org/html/rfc2696
    # Mit den Parametern dieser Datenstruktur kann das Paging von LDAP Suchergebnissen entsprechend RFC2696 gesteuert werden.
    # Mit dem Paging können alle (oder eine Teilmenge) eigenen Verzeichniseinträge gelesen werden, auch wenn das Limit von 100 Suchergebnissen überschritten wird.
    # Paging ist nur für eigene Verzeichniseinträge erlaubt. Deshalb muss bei Verwendung des Pagings zwingend der "owner" Suchparameter angegeben werden 
    # und den eigenen ownerID (entsprechend dem Wert im ID_Token) enthalten. Wird Paging nicht mit dem korrekten "owner" Suchparameter ausgeführt,
    # wird mit einem Fehler (HTTP Status Code 403) geantwortet.
    # Die Suchparameter müssen während eines Pagings (mit mehreren Request/Response Sequenzen) identisch sein (nur das "cookie" ändert sich). 
      type: object
      properties:
        size:
          type: integer
          example: 50
      # Im Request gibt der Client die gewünschte Paging Größe an (Maximalgröße entsprechend TIP1-A_5552). 
      #    Maximal diese Anzahl von Verzeichniseinträgen sind in einer Antwort enthalten.
      # Im Response trägt der Verzeichnisdienst in diesen Parameter die gesamte Anzahl von gefundenen Verzeichniseinträge an.
        cookie:
          type: string
          example: bGlnaHQgd29yay4=
      # Im ersten Request übergibt der Client einen leeren String in diesem Parameter. 
      # In jedes Response trägt der Verzeichnisdienst in diesen Parameter ein Cookie ein, über den das Paging zum nächsten Ergebnis erfolgt.
      # Der Client übernimmt dieses Cookie jeweils in den folgenden Request und erhält die nachsten Verzeichniseinträge.
      # Für den Client ist das Cookie transparent und darf nicht von ihm manipuliert werden.
      # In dem letzten Response - mit den letzten Verzeichniseinträgen - liefert der Verzeichnisdienst in diesem Parameter einen leeren String.

    readDirectoryEntryforSyncResponse:
      type: object
      properties:
        searchControlValue:
          $ref: '#/components/schemas/searchControlValue'
        directoryEntries:
          $ref: '#/components/schemas/DirectoryEntries'

  securitySchemes:
    OAuth2:
      description: |
        I_Directory_Administration unterstützt OAuth2 Client Credentials Flow.
        Token Endpoint ist spezifisch für die jeweilige Umgebung:
        
        **Testumgenung:**
        * https://auth-test.vzd.ti-dienste.de:9443/auth/realms/RSDirectoryAdministration/protocol/openid-connect/token
        
        **Referenzumgebung:**
        * https://auth-ref.vzd.ti-dienste.de:9443/auth/realms/RSDirectoryAdministration/protocol/openid-connect/token
        
        **Produktifumgebung:**
        * https://auth.vzd.ti-dienste.de:9443/auth/realms/RSDirectoryAdministration/protocol/openid-connect/token
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: '#umgebungsspezifisch'
          scopes:
            'VZD:DirectoryAdministration': I_Directory_Administration Client Scope
              Als Clients dieser Schnittstelle sind nur Systeme der TI Kartenherausgeber und von ihnen beauftragte Organisationen (z.B. TSPs) zulässig.
              Sie dürfen alle Operationen zur Administration der Verzeichniseinträge nutzen.
              Das AccessToken enthält im 'sub' claim den Identifier des Clients, der auf die Einträge zugreift. Dieser Identifier wird im Log abgelegt, welcher die Zugriffe über diese Schnittstelle protokolliert.
            'VZD:DirectoryRead': I_Directory_Administration Client Scope
              Lesender Zugriff auf den VZD (ohne Sync Operationen)
