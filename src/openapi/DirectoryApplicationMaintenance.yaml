openapi: 3.0.1

info:
  title: I_Directory_Application_Maintenance
  description: |
   # REST Schnittstelle zur Pflege der Fachanwendungsdaten der Verzeichniseinträge
     Über diese Schnittstelle können Fachanwendungsdaten der Verzeichniseinträge erzeugt, aktualisiert und gelöscht werden. 

  version: 1.4.1
  
  
  # Änderungen in Version 1.4.1 
  #  - Operation appTags: Return Type definiert
  #  - Operation read_Directory_Entry: Suchparameter für komLeData und kimData vereinfacht
  # 
  # Änderungen in Version 1.4.0 
  #  - Operation appTags ergänzt
  #  - Flag "noVzdMailEntry" für add_Directory_FA-Attributes und modify_Directory_FA-Attributes 
  #    hinzugefügt
  #  - Schema FAD1 um kimData erweitert und für alle POST/PUT Operationen Schema FAD_Req
  #    (ohne kimData) definiert
  #  - Operation read_Directory_Entry: Suchparameter komLeData-appTags in kimData-appTags umbenannt
  #    und neue Suchparameter für kimData aufgenommen
  # 
  # Änderungen in Version 1.3.0 
  #  - FAD1.komLeData.appTags (Anwendungskennzeichen) ergänzt
  #    und in Operationen add_Directory_FA-Attributes & modify_Directory_FA-Attributes beschrieben
  #  - Operation read_Directory_Entry um Suchparameter für Fachdaten erweitert
  # 
  # Änderungen in Version 1.2.4
  #  - Attribut entryType aus Schema baseDirectoryEntry - aus Kompatibilitätsgründen zu 
  #    bisherigen Schnittstellenversionen - auf Datentyp "array" geändert
  # 
  # Änderungen in Version 1.2.3
  #  - Attribut usage aus Schema userCertificate und Operationen entfernt
  #    (wurde nicht mehr genutzt)
  #  - Operation readLog: Erlaubte Parameter für Suchanfragen in Kommentaren erläutert
  # 
  # Änderungen in Version 1.2.2
  #  - Operation readLog: Parameter holder umbenannt in clientID 
  # 
  # Änderungen in Version 1.2.1
  #  - Operation readLog vereinfacht 
  # 
  # Änderungen in Version 1.2.0
  #  - baseDirectoryEntry.entryType ist ein Wert (kein array mehr)
  #  - Attribute in Schema baseDirectoryEntry und als Suchparameter 
  #    in Operation read_Directory_Entry ergänzt:
  #      active, meta 
  #  - Attribute im Schema userCertificate und als Suchparameter 
  #    in Operation read_Directory_Certificates ergänzt:
  #      serialNumber, issuer, publicKeyAlgorithm
  #  - Attribute im Schema userCertificate ergänzt:
  #      notBefore, notAfter
  #  - Attribute in Schema baseDirectoryEntry änderbar definiert:
  #      givenName, sn, cn
  
  # Änderungen in Version 1.1.7
  #  - Operation readLog hinzugefügt

  # Änderungen in Version 1.1.6
  #  - Fehlerbehandlung verbessert:
  #    o Schema Error: Optionale Fehlernachricht hinzugefügt
  #                    Struktur angepasst (mehrere Fehlermeldungen ermöglicht)
  #    o Für alle Fehler HTTP Status Kodes das Error Schema aufgenommen
  #    o Fehlercode 400 für Operationen read_Directory_Entry, read_Directory_Certificates, get_Directory_FA-Attributes ergänzt
  #
  # Änderungen in Version 1.1.5
  #  - Parameter "fad" in Operation add_Directory_FA-Attributes gestrichen. Die FAD des Clients wird auf Basis des TLS Client Zertifikats ermittelt.
  #  - Im Schema FAD1 das "required: - dn" gestrichen, da es Probleme mit einem Code-Generator verursacht hat
  #
  # Änderungen in Version 1.1.4
  #  - KOM-LE_Version wurde durch komLeData ersetzt. Dies erlaubt die Angabe von KIM-Versionen für einzelne KIM-Adressen. 
  #  - Die Client Authentisierung wurde auf mutualTLS angepasst (OAuth2 wurde gestrichen)
  #  - Server URLs hinzugefügt  
  #
  # Änderungen in Version 1.1.3
  #  - Filtermöglichkeiten in Leseoperationen read_Directory_Entry 
  #    (Wildcard "*" & Vorhandensein \00) aufgenommen.
  #  - Suchparameter in Leseoperationen read_Directory_Entry aufgenommen:
  #    maxKOMLEadr, changeDateTimeFrom, changeDateTimeTo
  #
  # Änderungen in Version 1.1.2
  #  - Fehlerbehandlung für Operation modify_Directory_FA-Attributes in den Kommentaren dieser Operation ausführlicher beschrieben.
  #  - Im Datenmodell für DirectoryEntry Attribut "userCertificates" maxItems auf 50 gesetzt
  #
  # Änderungen in Version 1.1.1
  #  - Im Datenmodell für Attribut "changeDateTime" den Format String "date-time" auskommentiert. Mit dieser Format Vorgabe ist kein Code mehr generierbar. Es soll sich aber weiterhin an das Format gehalten werden.
  #
  # Änderungen in Version 1.1.0
  #  - getInfo Operation - inklusive den dazugehörenden Schema Objekten "InfoObject", "Contact" und "License" - hinzugefügt.
  #  - Attribute professionOID und entryType zusätzlich in die Basisdaten - als Kopie aus den Zertifikatsdaten (userCertificate) aufgenommen. Diese Attribute wurden ebenfalls in die read_Directory_Entry Operation als Suchparameter aufgenommen.
  #
  # initiale Version
 
externalDocs:
  description: Weitere Dokumentationen
  url: http://www.gematik.de
servers:
- url: https://directory.vzd.telematik:9643/
  description: Production server (PU)
- url: https://directory-test.vzd.telematik-test:9643/
  description: Test server (TU)
- url: https://directory-ref.vzd.telematik-test:9643/
  description: Reference server (RU)


tags:
- name: getInfo Directory Application Maintenance
  description: Diese Operation liefert Metadaten über diese Schnittstelle
- name: DirectoryEntry Administration
  description: Pflege der Verzeichniseinträge (Basiseinträge)
- name: Certificate Administration
  description: Pflege der Zertifikatseinträge 
- name: Application Data Administration
  description: Pflege der Fachdaten

paths:
  /:
    get:
      tags:
      - getInfo Directory Application Maintenance
      summary: Diese Operation liefert Metadaten über Schnittstelle Directory Application Maintenance
      description: Liefert die Metadaten aus dem Info Object diese OpenAPI Spezifikation und ergänzt sie.
      operationId: getInfo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/InfoObject'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /DirectoryEntries:
    get:
      tags:
      - DirectoryEntry Administration
      summary: Gesamten Verzeichniseintrag lesen
      description: |
       Liefert alle zum Filter passenden Verzeichniseinträge (maximal 100 Einträge). Die angegebenen Parameter werden mit logischen UND verknüpft.
       
        Für die Leseoperationen read_Directory_Entry read_Directory_Entry_for_Sync der Schnittstellen I_Directory_Administration und I_Directory_Application_Maintenanc werden die folgenden Filtermöglichkeiten unterstützt: 
          - Suche mit Wildcard "*" in den Parametern
          
                  - givenName
                  - sn
                  - cn
                  - displayName
                  - streetAddress
                  - postalCode
                  - countryCode
                  - localityName
                  - stateOrProvinceName
                  - title
                  - organization
                  - otherName
                  - telematikID
                  - specialization
                  - domainID
                  - holder
                  - professionOID
                  - mail
                  - komLeData
                  - kimData
          - Suche nach Vorhandensein oder leerem Inhalt eines Attributs des VZD Datensatzes mit dem Kode \00 in den Parametern
          
                  - givenName
                  - sn
                  - cn
                  - displayName
                  - streetAddress
                  - postalCode
                  - countryCode
                  - localityName
                  - stateOrProvinceName
                  - title
                  - organization
                  - otherName
                  - specialization
                  - domainID
                  - holder
                  - professionOID
                  - changeDateTimeFrom
                  - changeDateTimeTo
                  - mail
            Diese Suche findet sowohl Datensätze mit nicht vorhandenem Attribut wie auch vorhandenem aber leerem Attribut.
            Der Suchparameter darf - für die Suche nach vorhandenem aber leerem Attribut - nur den Kode \00 enthalten, keine weiteren Zeichen.
            Alle Filterparameter einer Leseoperationen werden mit einem UND (&) verknüpft.      
      operationId: read_Directory_Entry
      parameters:
      - name: uid
        in: query
        description: ID von dem Verzeichniseintrag (distinguishedName.uid)
        schema:
          type: string  
      - name: givenName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs givenName.
        schema:
          type: string  
      - name: sn
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs sn.
        schema:
          type: string  
      - name: cn
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs cn.
        schema:
          type: string  
      - name: displayName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs displayName.
        schema:
          type: string  
      - name: streetAddress
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs streetAddress.
        schema:
          type: string  
      - name: postalCode
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs postalCode.
        schema:
          type: string  
      - name: countryCode
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs countryCode.
        schema:
          type: string    
      - name: localityName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs localityName.
        schema:
          type: string  
      - name: stateOrProvinceName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs stateOrProvinceName.
        schema:
          type: string  
      - name: title
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs title.
        schema:
          type: string  
      - name: organization
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs organization.
        schema:
          type: string  
      - name: otherName
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs otherName.
        schema:
          type: string  
      - name: telematikID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).
        schema:
          type: string  
      - name: telematikID-SubStr
        in: query
        description: |
         Erlaubt die Suche nach einem Substring am Anfang der telematikID (die telematikID in den Basisdaten).
         Entspricht der LDAP Filters Substring Assertion vom Typ "subInitial Component".
        schema:
          type: string  
      - name: specialization
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs specialization. 
         Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.
        schema:
          type: string  
      - name: domainID
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs domainID. 
         Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.
        schema:
          type: string  
      - name: holder
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs holder. 
         Der Verzeichniseintrag wird selektiert, wenn der angegebene holder im Attribut holder (array) des Verzeichniseintrags enthalten ist.
          Wenn der Parameter mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (maximal 100 Einträge).
          Zur Suche nach Einträge ohne holder ist der Parameter mit dem einem leeren String "" zu belegen. Auch in diesem Fall werden alle gefundenen Einträge zurückgegeben (maximal 100 Einträge).
        schema:
          type: string  
      - name: personalEntry
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs personalEntry. 
        schema:
          type: string  
      - name: dataFromAuthority
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs dataFromAuthority. 
        schema:
          type: string  
      - name: professionOID
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs professionOID. 
         Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den professionOID's (array) des Basiseintrags vorhanden ist. 
        schema:
          type: string  
      - name: entryType
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs entryType. 
         Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den entryType's (array) des Basiseintrags vorhanden ist. 
        schema:
          type: string  
      - name: maxKOMLEadr
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs maxKOMLEadr. 
        schema:
          type: string  
      - name: changeDateTimeFrom
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs changeDateTime. 
          Selektiert alle Datensätze mit 
           changeDateTime >= changeDateTimeFrom
        schema:
          type: string  
          # format: date-time
          example: "2017-07-21T17:32:28Z"          
      - name: changeDateTimeTo
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs changeDateTime. 
          Selektiert alle Datensätze mit 
           changeDateTime <= changeDateTimeTo
        schema:
          type: string  
          # format: date-time
          example: "2018-07-21T17:32:28Z"
      - name: baseEntryOnly
        in: query
        description: |
         Mit baseEntryOnly = "true" wird nur der Basiseintrag (baseDirectoryEntry) im Response zurückgegeben. Falls nicht angegeben oder mit "false" belegt, wird der gesamte Verzeichniseintrag mit Zertifikaten und Fachdaten im Response zurückgegeben.
        schema:
          type: boolean
          example: true
      - name: active
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs baseDirectoryEntry.active.
        schema:
          type: boolean  
      - name: meta
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs baseDirectoryEntry.meta
          
          Selektiert alle Datensätze, deren Attribut meta den angegebenen String in einem Wert des arry's enthält.
        schema:
          type: string  
      - name: mail
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs FAD1.mail
          
          Selektiert alle Datensätze, deren Attribut FAD1.mail den angegebenen String in einem Wert des arry's enthält.
        schema:
          type: string  
      - name: komLeData
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs FAD1.komLeData
          
          Selektiert alle Datensätze, deren Attribut FAD1.komLeData den angegebenen String in einem Wert des array's enthält.
          komLeData enthält die "version" und "mail" durch Komma getrennt in einem array.
          Beispiel: 1.0,mc_smcb_za@dom1.komle.telematik-test
          Für diesen Suchparameter kann ein Wildcard genutzt werden.
        schema:
          type: string  
      - name: kimData
        in: query
        description: |
          Erlaubt die Suche mit Hilfe des Attributs FAD1.kimData.mail
          
          Selektiert alle Datensätze, deren Attribut FAD1.kimData.mail den angegebenen String in einem Wert des arry's enthält.
                    
          Selektiert alle Datensätze, deren Attribut FAD1.kimData den angegebenen String in einem Wert des array's enthält.
          komLeData enthält die "mail", "version" und "appTags" durch Komma getrennt in einem array.
          Die appTags werden durch das Pipe Zeichen getrennt. 
          Bitte beachten: Wenn das Pipe Zeichen im Suchstring genutzt wird muss die besondere
          Bedeutung dieses Zeichens bei der LDAP Suche beachtet werden.
          Beispiel: mz_smcb_za@dom2.kim.telematik-test,1.0,DALE-UV;Einsendung;V1.0|eEB;V1.0
          Für diesen Suchparameter kann ein Wildcard genutzt werden, z.B. 
            mz_smcb_za@dom2.kim.telematik-test*

        schema:
          type: string  

      responses:
        200:
          description: |
           OK
           Es werden alle zu dem Filter Parametern passenden Verzeichniseinträge - inklusive Zertifikaten und Fachdaten - zurückgegeben.
           Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.   
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/DirectoryEntries'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /DirectoryEntries/Certificates:
  
    get:
      tags:
      - Certificate Administration
      summary: Zertifikat lesen
      description: Liefert alle Zertifikate, die dem Filter (siehe 'parameters') entsprechen.
      operationId: read_Directory_Certificates
      parameters:
      - name: uid
        in: query
        description: ID vom übergeordneten Verzeichniseintrag
        schema:
          type: string
      - name: certificateEntryID
        in: query
        description: |
         ID von dem Zertifikat (dn.cn vom Zertifikatseintrag)
         - Wenn angegeben wird das adressierte (certificateEntryID) Zertifikat geliefert.
         - Wenn nicht angegeben werden alle Zertifikate des übergeordneten Verzeichniseintrags geliefert.
        schema:
          type: string
      - name: entryType
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs entryType.
        schema:
          type: string
      - name: telematikID
        in: query
        description: |
         telematikID von dem Zertifikat 
         Erlaubt die Suche nach Zertifikatseinträgen einer telematikID.
        schema:
          type: string
      - name: professionOID
        in: query
        description: |
         Erlaubt die Suche mit Hilfe des Attributs professionOID. 
         Der Verzeichniseintrag wird selektiert, wenn die angegebene professionOID im Attribut professionOID (array) des Zertifikatseintrags enthalten ist.
        schema:
          type: string  
      - name: active
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs userCertificate.active. 
        schema:
          type: boolean  
      - name: serialNumber
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs userCertificate.serialNumber. 
        schema:
          type: string  
      - name: issuer
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs userCertificate.issuer. 
        schema:
          type: string  
      - name: publicKeyAlgorithm
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs userCertificate.publicKeyAlgorithm. 
        schema:
          type: string  


      responses:
        200:
          description: |
           OK
           Es werden alle gefundenen Zertifikatseinträge zurückgegeben.
           Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.                                                                                                         
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/userCertificates'

        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        
        401:
          description: |
           Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
           Not Found
           Certificate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /DirectoryEntries/{telematikID}/KOM-LE_Fachdaten:
    post:
      tags:
      - Application Data Administration
      summary: Fachdateneintrag erzeugen
      description: Erzeugt einen neuen Fachdateneintrag 
      operationId: add_Directory_FA-Attributes
      parameters:
       - name: telematikID
         in: path
         description: telematikID von dem Verzeichniseintrag 
         schema:
          type: string
         required: true
      requestBody:
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/FAD_Req'

   
      responses:
        201:
          description: |
           Created
           Der Fachdateneintrag wurde erfolgreich angelegt.
          content: {}
        400:
          description: |
           Bad Request
           
           Fehler in dem Request Body
           
             - Anzahl der zulässigen Mail Adressen (maxKOMLEadr) überschritten 
               Ein Response mit HTTP Status Kode 400 und folgenden Werten im Body wird zurück gegeben
               ```
                {
                    "attributeName": "mail",
                    "attributeError": "maxKOMLEadr wurde überschritten"
                  }
            - Unzulässiger Wert von Attribut KOM-LE_Version im Request
              Ein Response mit HTTP Status Kode 400 und folgenden Werten im Body wird zurück gegeben
              ```
                 {
                    "attributeName": "version",
                    "attributeError": "Unzulässiger Wert"
                   }
            - Liste von Mail Adressen in FAD1.mail und FAD1.komLeData.mail inkonsistent
              Ein Response mit HTTP Status Kode 400 und folgenden Werten im Body wird zurück gegeben
              ```
                 {
                    "attributeName": "mail",
                    "attributeError": "Inkonsistenz zwischen FAD1.mail und FAD1.komLeData.mail"
                   }
          content: 
            application/json:
             schema:
              $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        
        404:
          description: Not Found
                    #  telematikID not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        


  /DirectoryEntries/{telematikID}/KOM-LE_Fachdaten/{fad}:
  
    get:
      tags:
      - Application Data Administration
      summary: Fachdateneintrag lesen
      description: Liefert den adressierten Fachdateneintrag.
      operationId: get_Directory_FA-Attributes
      parameters:
      - name: telematikID
        in: path
        description: telematikID von dem Verzeichniseintrag
        schema:
          type: string
        required: true  
      - name: fad
        in: path
        description: FAD vom aufrufenden Fachdienst Anbieter
        schema:
          type: string
        required: true  

      responses:
        200:
          description: OK
                    #  Der Fachdateneintrag wird zurückgegeben.
 
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/FAD1'
        400:
          description: Bad Request
                # Allgemeiner Fehler im Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        
        404:
          description: Not Found
                    #  telematikID not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        


    put:
      tags:
      - Application Data Administration
      summary: Fachdateneintrag ändern
      description: Ändert den adressierten Fachdateneintrag.
      operationId: modify_Directory_FA-Attributes
      parameters:
      - name: telematikID
        in: path
        description: telematikID von dem Verzeichniseintrag
        schema:
          type: string
        required: true  
      - name: fad
        in: path
        description: FAD vom aufrufenden Fachdienst Anbieter
        schema:
          type: string
        required: true  
      requestBody:
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/FAD_Req'
   
      responses:
        200:
          description: |
           OK
           Der Fachdateneintrag wurde erfolgreich geändert.
          content: {}
        400:
          description: | 
           Bad Request
           Fehler in dem Request Body
           
           Beispiele für Fehlerfälle:
            
             - Anzahl der zulässigen Mail Adressen (maxKOMLEadr) überschritten 
               Ein Response mit HTTP Status Kode 400 und folgenden Werten im Body wird zurück gegeben
               ```
                {
                    "attributeName": "mail",
                    "attributeError": "maxKOMLEadr wurde überschritten"
                  }
            - Unzulässiger Wert von Attribut KOM-LE_Version im Request
              Ein Response mit HTTP Status Kode 400 und folgenden Werten im Body wird zurück gegeben
              ```
                 {
                    "attributeName": "version",
                    "attributeError": "Unzulässiger Wert"
                   }
            - Liste von Mail Adressen in FAD1.mail und FAD1.komLeData.mail inkonsistent
              Ein Response mit HTTP Status Kode 400 und folgenden Werten im Body wird zurück gegeben
              ```
                 {
                    "attributeName": "mail",
                    "attributeError": "Inkonsistenz zwischen FAD1.mail und FAD1.komLeData.mail"
                   }
          content: 
            application/json:
             schema:
              $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
                    #  telematikID not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


    delete:
      tags:
      - Application Data Administration
      summary: Fachdateneintrag löschen
      description: Löscht den adressierten Fachdateneintrag.
      operationId: delete_Directory_FA-Attributes
      parameters:
      - name: telematikID
        in: path
        description: telematikID von dem Verzeichniseintrag
        schema:
          type: string
        required: true  
      - name: fad
        in: path
        description: FAD vom aufrufenden Fachdienst Anbieter
        schema:
          type: string
        required: true  

      responses:
        200:
          description: OK
                    #  Der Fachdateneintrag wurde erfolgreich gelöscht.
          content: {}
        400:
          description: Bad Request
                    #  Fehler in dem Request Body
          content: 
            application/json:
             schema:
              $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
                    #  telematikID not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /Log:
    get:
      tags:
      - Log
      summary: Log von Verzeichniseinträgen lesen
      description: Liefert die Log Daten alle zum Filter passenden Verzeichniseinträge. Die angegebenen Parameter werden mit logischen UND verknüpft.
      operationId: readLog
#
# Für Operation readLog werden folgende Kombinationen der Suchparameter erlaubt:
#      - UID + logTimeFrom (optional) +logTimeTo (optional)
#      - *telematikID* + logTimeFrom (optional) +logTimeTo (optional)
#      - *clientID* + logTimeFrom (optional) +logTimeTo (optional)
#      - operation + logTimeFrom (optional) +logTimeTo (optional)
#      - noDataChanged + logTimeFrom (optional) +logTimeTo (optional)
#      - logTimeFrom +logTimeTo
#      - logTimeFrom
#      - logTimeTo
#   Andere Kombinationen der Suchparameter werden mit 400 bad request beantwortet.
#
# Für die Leseoperationen read_Directory_Entry, read_Directory_Entry_for_Sync,
# read_Directory_Entry_for_Sync_paging und readLog der Schnittstellen I_Directory_Administration 
# und I_Directory_Application_Maintenance
# werden die folgenden Filtermöglichkeiten unterstützt: 
#     o Suche mit Wildcard "*" in den Parametern
#           - telematikID
#           - clientID
#           - professionOID
#       Wildcard ist am Ende und am Anfang nutzbar:
#           - *Mustermann* - "contains" 
#           - "Dr. Manfred*" - "startsWith"
#           - "* MBA" - "endsWith"
#           treffen alle "Dr. Manfred Mustermann MBA".
#
      parameters:
      - name: uid
        in: query
        description: ID von dem Verzeichniseintrag (distinguishedName.uid)
        schema:
          type: string  
      - name: telematikID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).
        schema:
          type: string  
      - name: clientID
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs clientID. 
                     Der Verzeichniseintrag wird selektiert, wenn die angegebene clientID im Log-Datensatz enthalten ist.
        schema:
          type: string  
      - name: logTimeFrom
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs logTime. 
                  #  Selektiert alle Datensätze mit 
                  #  logTime >= logTimeFrom
        schema:
          type: string  
          # format: date-time
          example: "2017-07-21T17:32:28Z"          
      - name: logTimeTo
        in: query
        description: Erlaubt die Suche mit Hilfe des Attributs logTime. 
                  #  Selektiert alle Datensätze mit 
                  #  logTime <= logTimeTo
        schema:
          type: string  
          # format: date-time
          example: "2018-07-21T17:32:28Z"
      - name: operation
        in: query
        description: Erlaubt die Suche anhand der ausgeführten Operation
        schema:
          type: string
          enum: [add_Directory_Entry, 
                 modify_Directory_Entry, 
                 delete_Directory_Entry, 
                 add_Directory_Entry_Certificate, 
                 delete_Directory_Entry_Certificate, 
                 add_Directory_FA-Attributes, 
                 modify_Directory_FA-Attributes, 
                 delete_Directory_FA-Attributes]
      - name: noDataChanged
        in: query
        description: Erlaubt die Suche nach Log Daten für Schreiboperationen, die keine Daten geändert haben. 
          (noDataChanged=true -> durch diese Operation wurden keine Daten geändert)
        schema:
          type: boolean  
          example: flase

      responses:
        200:
          description: OK
                    #  Es werden die Logdaten aller zu dem Filter Parametern passenden Verzeichniseinträgen zurückgegeben.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/LogEntries'
        400:
          description: Bad Request
                    # z.B. Kombinationen der Suchparameter nicht erlaubt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appTags:
    get:
      tags:
       - appTags
      summary: Abfrage der Anwendungskennzeichen
      description: Es wird die Liste der Anwendungskennzeichen abgefragt.
        Die Anwendungskennzeichen werden als FHIR Codesystem im Response zurückgegeben
      operationId: getAppTags

      responses:
        200:
          description: OK
             # Rückgabe der Anwendungskennzeichen als FHIR CodeSystem (ServiceIdentifierCS)
             # Datenstruktur siehe https://simplifier.net/app-transport-framework/service-identifier-cs/~json
          content:
            application/json:
              schema:
               type: string  
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:

  schemas:
  
    userCertificate:
      description: Jeder Verzeichniseintrag muss mindestens ein Zertifikat enthalten.
      required:
      - dn
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        entryType:
          type: string
          description: |
           Eintragstyp Wird vom VZD anhand der in dem Zertifikat enthaltenen OID (Extension Admission, Attribut ProfessionOID) und der Spalte Eintragstyp in Tab_VZD_Mapping_Eintragstyp_und_ProfessionOID automatisch eingetragen. 
           Siehe auch [gemSpecOID]# Tab_PKI_402 und Tab_PKI_403'
          readOnly: true
        telematikID:
          type: string
          description: |
           Wird beim Anlegen des Eintrags vom VZD aus dem Zertifikat übernommen (Feld registrationNumber der Extension Admission).
           Falls der Basiseintrag (baseDirectoryEntry) ohne Zertifikat angelegt wird, kann in Operation add_Directory_Entry die telematikID angegeben werden.
           Damit ist der Verzeichniseintrag bereits über die telematikID auffindbar.
        professionOID:
          maxItems: 100
          minItems: 0
          type: array
          readOnly: true
          items:
            type: string
            description: |
             Profession OID / Wird vom VZD anhand der in den Zertifikaten enthaltenen OIDs (Extension Admission, Attribut ProfessionOID) und dem Mapping in ab_VZD_Mapping_Eintragstyp_und_ProfessionOID automatisch eingetragen.
             Siehe [gemSpecOID]# Tab_PKI_402 und Tab_PKI_403. 
             Kann mehrfach vorkommen (0..100)
        userCertificate:
          type: string
          description: |
           Zertifikat im DER Format. Base64 kodiert.
           Die pflegende Stelle erhält das Zertifikat vom TSP oder falls das nicht möglich ist wird ein Ersatzverfahren abgestimmt.
        description:
          type: string
          description: Dieses Attribut ermöglicht das Zertifikat zu beschreiben, um
             die Administration des VZD Eintrags zu vereinfachen.
        active:
          type: boolean
          readOnly: true
          example: true
          description: Dieses Attribut eigt an, ob das Zertifikat aktiv ist oder nicht (true oder false).
        notBefore:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "notBefore" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
            Wird vom VZD für die periodische Auswertung der Zertifikats-Gültigkeit genutzt.
          readOnly: true
          example: '2017-12-04T01:00:00'
        notAfter:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "notAfter" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
            Wird vom VZD für die periodische Auswertung der Zertifikats-Gültigkeit genutzt.
          readOnly: true
          example: '2022-12-04T00:59:59'
        serialNumber:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "serialNumber" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
          readOnly: true
          example: 80276883110000092581
        issuer:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "issuer" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
          readOnly: true
          example: 'CN=GEM.SMCB-CA8 TEST-ONLY,OU=Institution des Gesundheitswesens-CA der Telematikinfrastruktur,O=gematik GmbH NOT-VALID,C=DE'
        publicKeyAlgorithm:
          type: string
          description: |
            Wert wird vom VZD aus dem Zertifikat Feld "publicKeyAlgorithm" entnommen und in dieses Attribut ohne Formatänderung eingetragen.
          readOnly: true
          example: RSA

    userCertificates:
      type: array
      items:
        $ref: '#/components/schemas/userCertificate'
            
    Fachdaten:
      required:
      - dn
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        FAD1:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/FAD1'

    FAD_Req:
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        mail:
          type: array
          items:
            type: string
            description: 'E-Mail-Adresse'
        komLeData:
          type: array
          items:
            type: object
            properties:
              mail:
                type: string
                description: 'E-Mail-Adresse'
              version:
                type: string
                example: 1.5+
                description: 'Die höchste Version der KIM Clientmodule für diese KIM-Mail-Adresse'
              appTags:
                type: array
                items:
                  type: string
                  example: 
                    - eEB;V1.0
                    - DALE-UV;Einsendung;V1.0
                  description: 'Anwendungskennzeichen, welche diese KIM-Mail-Adresse verarbeiten kann'
              noVzdMailEntry:
                  type: boolean
                  default: false
                  description: |
                    Wenn "noVzdMailEntry == true" dann werden durch den VZD die "mail" und "komLeData"
                    Attribute nicht befüllt oder im Fall von PUT werden vorhandene "mail" und
                    "komLeData" Attribute gelöscht. Nach Ausführung der Operation ist in diesem Fall nur
                    kimData gefüllt und die "mail" und "komLeData" Attribute sind leer.
                    Dieses neue Attribut soll client-seitig nur vom Basis Consumer unterstützt werden.

            description: |
              Liste von KIM-Adressen mit der zugehörigen KIM-Version und Anwendungskennzeichen. 
              Für jede Mail Adresse darf nur einen Element in der Liste `komLeData` existieren. 
              Geschrieben wird immer die gesamte Liste. 
              Für Änderungen muss erst der aktuelle Eintrag gelesen werden und nach Änderung in der Liste der gesamte Eintrag wieder geschrieben werden.
              Die Datenstruktur komLeData wird in LDAP in folgenden Attributen als String abgelegt:
                - komLeData: In diesem Attribut werden aus Kompatibilitätsgründen weiterhin die Attribute "mail" und "version" abgelegt. 
                  Format des LDAP Attributes:  mail,version
                  Beispiele der LDAP Darstellung:
                     komLeData: 1.5+,mc_smcb_za@dom1.komle.telematik-test 
                     komLeData: 1.0,mz_smcb_za@dom2.kim.telematik-test
                - kimData: In diesem Attribut werden die Attribute "mail", "version" und "appTags" abgelegt. 
                  Format des LDAP Attributes:  mail,version,appTag1|appTag2|appTag3
                  Beispiele der LDAP Darstellung:
                     kimData: mc_smcb_za@dom1.komle.telematik-test,1.5+,eEB;V1.0 
                     kimData: mz_smcb_za@dom2.kim.telematik-test,1.0,DALE-UV;Einsendung;V1.0|eEB;V1.0

    FAD1:
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        mail:
          type: array
          items:
            type: string
            description: 'E-Mail-Adresse'
        komLeData:
          type: array
          items:
            type: object
            properties:
              mail:
                type: string
                description: 'E-Mail-Adresse'
              version:
                type: string
                example: 1.5+
                description: 'Die höchste Version der KIM Clientmodule für diese KIM-Mail-Adresse'
            description: |
              Liste von KIM-Adressen mit der zugehörigen KIM-Version. 
              Für jede Mail Adresse darf nur einen Element in der Liste `komLeData` existieren. 
              Geschrieben wird immer die gesamte Liste. 
              Für Änderungen muss erst der aktuelle Eintrag gelesen werden und nach Änderung in der Liste der gesamte Eintrag wieder geschrieben werden.
              Die Datenstruktur komLeData wird in LDAP in folgendem Attribut als String abgelegt:
                - komLeData: In diesem Attribut werden aus Kompatibilitätsgründen weiterhin die Attribute "mail" und "version" abgelegt. 
                  Format des LDAP Attributes:  mail,version
                  Beispiele der LDAP Darstellung:
                     komLeData: 1.5+,mc_smcb_za@dom1.komle.telematik-test 
                     komLeData: 1.0,mz_smcb_za@dom2.kim.telematik-test
        kimData:
          type: array
          items:
            type: object
            properties:
              mail:
                type: string
                description: 'E-Mail-Adresse'
              version:
                type: string
                example: 1.5+
                description: 'Die höchste Version der KIM Clientmodule für diese KIM-Mail-Adresse'
              appTags:
                type: array
                items:
                  type: string
                  example: 
                    - eEB;V1.0
                    - DALE-UV;Einsendung;V1.0
                  description: 'Anwendungskennzeichen, welche diese KIM-Mail-Adresse verarbeiten kann'
            description: |
              Liste von KIM-Adressen mit der zugehörigen KIM-Version und Anwendungskennzeichen. 
              Für jede Mail Adresse darf nur einen Element in der Liste `kimData` existieren. 
              Geschrieben wird immer die gesamte Liste. 
              Für Änderungen muss erst der aktuelle Eintrag gelesen werden und nach Änderung in der Liste der gesamte Eintrag wieder geschrieben werden.
              Die Datenstruktur kimData wird in LDAP in folgendem Attribut als String abgelegt:
                - kimData: In diesem Attribut werden die Attribute "mail", "version" und "appTags" abgelegt. 
                  Format des LDAP Attributes:  mail,version,appTag1|appTag2|appTag3
                  Beispiele der LDAP Darstellung:
                     kimData: mc_smcb_za@dom1.komle.telematik-test,1.5+,eEB;V1.0 
                     kimData: mz_smcb_za@dom2.kim.telematik-test,1.0,DALE-UV;Einsendung;V1.0|eEB;V1.0


    distinguishedName:
      required:
      - uid
      readOnly: true
      type: object
      properties:
        uid:
          type: string
          description: |
           entryID: Name/ID, den den Eintrag eindeutig identifiziert. 
           Hat für den Verzeichnisdienst_Eintrag, Certificate, KOM-LE_Fachdaten und FAD1 eines Verzeichniseintrags den gleichen Wert.
        dc:
          type: array
          items:
            type: string
            description: Domain Component
        ou:
          type: array
          items:
            type: string
            description: Organizational Unit
        cn:
          type: string
          description: Common Name

    baseDirectoryEntry:
      type: object
      properties:
        dn:
          $ref: '#/components/schemas/distinguishedName'
        givenName:
          type: string
          description: 'HBA: Vorname, obligatorisch, wird aus dem Zertifikat
            übernommen / SMC-B: nicht verwendet'
          example:  Vorname
        sn:
          type: string
          description: 'HBA: Name, obligatorisch, wird aus dem Zertifikat
            übernommen / SMC-B: nicht verwendet'
          example:  Nachname
        cn:
          type: string
          description: 'HBA: Vorname und Nachname / SMC-B: Bezeichner:
            Name Wird vom VZD aus dem Zertifikatsattribut commonName übernommen.'
          example:  Vorname Nachname  
        displayName:
          type: string
          description: 'Anzeigename, kann geändert werden. 
            Dieses Attribut wird genutzt um den Namen der Organisation gegenüber dem Anwender darzustellen (Verwendung als Filter-Attribut um die Suche einzuschränken und bei der Darstellung des Ergebnisses).
              Der Wert wird von der pflegenden Stelle festgelegt.
              Konvention für HBA Einträge: Name, Vorname'
          example:  Name, Vorname
        streetAddress:
          type: string
          description: 'Straße und Hausnummer
                        Der Wert wird von der pflegenden Stelle festgelegt'
          example: Friedrichstraße 136
        postalCode:
          type: string
          description: 'Postleitzahl
                        Der Wert wird von der pflegenden Stelle festgelegt'
          example: 10117
        countryCode:
          type: string
          maxLength: 2
          description: 'Ländercode
                        Entsprechend ISO-3166-1 ALPHA-2'
                    # Falls das Attribut beim Anlegen des Datensatzes nicht beölegt wird, ergänzt der VZD den Code für Deutschland (Defaultwert).
          example: DE        
        localityName:
          type: string
          description: 'Ort
                        Der Wert wird von der pflegenden Stelle festgelegt'
          example: Berlin
        stateOrProvinceName:
          type: string
          description: 'Bundesland
                        Der Wert wird von der pflegenden Stelle festgelegt'
          example: Berlin
        title:
          type: string
          description: 'HBA: Titel, optional / SMC-B: nicht verwendet'
        organization:
          type: string
          example: 12345670
          description: 'Organisation
                        Der Wert wird von der pflegenden Stelle festgelegt'
        otherName:
          type: string
          description: 'Anderer Name. 
                        Wird vom VZD aus dem Zertifikatsattribut otherName übernommen.'
        telematikID:
          type: string
          description: 'Wird beim Anlegen des Eintrags vom VZD aus dem Zertifikat übernommen (Feld registrationNumber der Extension Admission).
                    Falls der Basiseintrag (baseDirectoryEntry) ohne Zertifikat angelegt wird, kann in Operation add_Directory_Entry die telematikID angegeben werden.
            Damit ist der Verzeichniseintrag bereits über die telematikID im baseDirectoryEntry auffindbar. Diese telematikID muss mit der telematikID aus dem Zertifikatseintrag (userCertificate) übereinstimmen. Simmten die telematikIDs nicht überein, wird die Operation mit Fehlercode 422 abgelehnt' 
        specialization:
          maxItems: 100
          type: array
          description: 'Fachgebiet
                        Der Wert wird von der pflegenden Stelle festgelegt'
          items:
            type: string
        domainID:
          maxItems: 100
          type: array
          description: 'Ärzte-> Betriebsstättennummer
                        Der Wert wird aus dem Zertifikat übernommen (Attribut organizationName)'
          items:
            type: string
            example: 345678975
        holder:
          maxItems: 100
          type: array
          description: |
            Identifiziert den Eigentümer dieses Verzeichniseintrags, der Änderungen an ihm vornehmen darf.
            Hat keinen Einfluss auf Fachdaten und Zertifikatsdaten.
            Beim Anlegen eines neuen Verzeichniseintrags (add_Directory_Entry)
              - Ist im add_Directory_Entry Request das Attribut "holder" nicht vorhanden oder enthält keine Werte
                 - Wird vom VZD in dieses Attribut kein Wert (leeres Attribut) eingetragen. 
              - Ist im add_Directory_Entry Request das Attribut "holder" vorhanden und mit Inhalten gefüllt
                 - Ist ein Wert aus dem Request Attribut "holder" nicht gültig, MUSS der VZD die Operation mit 
                 HTTP-Status-Code 422 abweisen und die weitere Verarbeitung von diesem Request abbrechen.
                 - Sind alle Werte aus dem Request Attribut "holder" gültig, MUSS der VZD die Werte aus dem Request 
                 entnehmen und sie in das "holder" Attribut des Verzeichniseintrags übernehmen.
            Beim Ändern eines neuen Verzeichniseintrags (modify_Directory_Entry)
              - Ist im modify_Directory_Entry Request das Attribut "holder" nicht vorhanden oder enthält keine Werte
                 - Die Werte im aktuellen "holder" Attribut des Verzeichniseintrags bleiben erhalten.
          items:
            type: string
            example: KartenHerausgeberABC
        maxKOMLEadr:
          type: string
          description: Maximale Anzahl von mail Adressen in den KOM-LE Fachdaten. Falls kein Wert eingetragen wurde, können beliebig viele mail Adressen in den KOM-LE Fachdaten eingetragen werden. Falls ein Wert eingetragen wurde, können maximal so viele mail Adressen in den KOM-LE Fachdaten eingetragen werden.
          example: 1
        personalEntry:
          type: boolean
          description: |
            - Wird vom VZD eingetragen 
            - Wird auf Basis von entryType bei jeder relevanten Operation neu ermittelt
            - Wert == TRUE, wenn entryType den Wert 1 hat (Berufsgruppe), Wert == FALSE sonst
          readOnly: true
          example: true
        dataFromAuthority:
          type: boolean
          description: Wird vom VZD eingetragen / Wert == TRUE, wenn der Verzeichnisdienst_Eintrag von dem Kartenherausgeber geschrieben wurde, Wert == FALSE sonst 
          readOnly: true
          example: true
        changeDateTime:
          type: string
#          format: date-time Mit dieser Format Vorgabe ist kein Code mehr generierbar, deshalb auskommentiert. Es soll sich aber weiterhin an das Format gehalten werden.
          description: Der VZD setzt dieses Attribut bei jeder Schreiboperation für den Datensatz (Basisdaten) auf die aktuelle Zeit. Format entsprechend RFC 3339, section 5.6.
          readOnly: true
          example: "2017-07-21T17:32:28Z"
        professionOID:
          maxItems: 100
          minItems: 0
          type: array
          readOnly: true
          items:
            type: string
            description: Wird vom VZD beim Hinzufügen eines Zertifikatseintrags (userCertificate) ebenfalls hier in den Basiseintrag eingefügt, wenn der Wert von professionOID noch nicht hier in den Basisdaten vorhanden ist.
              Beim Löschen eines Zertifikatseintrags werden die professionOID's dieses Zertifikatseintrags auch in den Basisdaten entfernt, falls sie nicht in anderen (noch gültigen und verlinkten) Zertifikatseinträgen vorhanden sind.
        entryType:
          maxItems: 1
          minItems: 0
          type: array
          items:
            type: string
            description: |
             - Wird vom VZD beim Hinzufügen eines Zertifikatseintrags (userCertificate) ebenfalls hier in den Basiseintrag eingefügt, wenn der Wert von entryType noch nicht hier in den Basisdaten vorhanden ist.
              - Mit Operationen add_Directory_Entry und modify_Directory_Entry ist  Setzen/Ändern von Attribut entryType möglich. Der Wert von Attribut entryType muss konform zu den Zertifikaten des Eintrags sein. Bei Abweichungen wird die Operation mit HTTP Status Kode 400 abgelehnt.
                - Wird in Operationen add_Directory_Entry ein Zertifikat angegeben wird, muss ein eventuell angegebener Parameter entryType mit dem Wert aus dem Zertifikat übereinstimmen. Bei nicht angegebenem Parameter entryType wird das Attribut entryType entsprechend dem Zertifikat gesetzt.
                - Mit Operation modify_Directory_Entry kann über Request Parameter entryType das Attribut im VZD geändert werden, solange kein Zertifikat im VZD enthalten ist (welches dann einen abweichenden Wert gegenüber dem Request Parameter entryType enthalten würde).
             - Wenn mit Operation add_Directory_Entry_Certificate ein neues Zertifikat hinzu gefügt wird - welches in Bezug auf Attribut entryType vom Basisdatensatz abweicht - dann führt das zum Abbruch der Operation mit Fehler (HTTP Status Kode 400).
             - Beim Löschen von Zertifikaten bleibt der Wert im Attribut entryType erhalten
        active:
            type: boolean
            example: true
            default: true
            description: |
              Das Attribut "active" steuert die Sichtbarkeit des gesamten VZD Eintrags.
              Bei FALSE wird der Eintrag aus der flachen Liste entfernt bzw. nicht übertragen. Default = TRUE
              
              Dieses Attribut wird nicht in die flache Liste synchronisiert. 
        meta:
          maxItems: 100
          minItems: 0
          type: array
          items:
            type: string
            description: |
              Dieses Attribut kann vom Kartenherausgeber und TSP für die Koordinierung ihrer Arbeit genutzt werden.
              Beispiel für die Nutzung:
               - TSP erzeugt einen VZD Eintrag.
               - TSP setzt das Attribut "meta" auf "state_1"
               - Kartenherausgeber prüft periodisch auf Einträge mit meta="state_1" und ergänzt Basisdaten
              Der konkrete Ablauf und die Werte werden durch die beteiligten Kartenherausgeber und TSPs festgelegt.
              
              Wird vom VZD nicht ausgewertet.
              Dieses Attribut wird nicht in die flache Liste synchronisiert. 


    DirectoryEntry:
      type: object
      properties:
        DirectoryEntryBase:
          $ref: '#/components/schemas/baseDirectoryEntry'
        userCertificates:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/userCertificate'
        Fachdaten:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Fachdaten'

    DirectoryEntries:
      type: array
      items:
        $ref: '#/components/schemas/DirectoryEntry'

    LogEntries:
      type: array
      items:
        $ref: '#/components/schemas/LogEntry'

    LogEntry:
      type: object
      properties:
        clientID:
          description: clientID von dem Client, der die Datenänderung ausgeführt hat
          type: string
          readOnly: true
          example: Client123
        logTime:
          type: string
#          format: date-time 
          description: Zeitpunkt der Schreiboperation für den Datensatz. Format entsprechend RFC 3339, section 5.6.
          readOnly: true
          example: "2017-07-21T17:32:28Z"
        uid:
          type: string
          description: Name/ID, den den Eintrag eindeutig identifiziert. 
        telematikID:
          type: string
          description: telematikID von dem geänderten VZD Eintrag
        operation:
          description: Ausgeführte Operation
          type: string
          enum: [add_Directory_Entry, 
                 modify_Directory_Entry, 
                 delete_Directory_Entry, 
                 stateSwitch_Directory_Entry,
                 add_Directory_Entry_Certificate, 
                 delete_Directory_Entry_Certificate, 
                 add_Directory_FA-Attributes, 
                 modify_Directory_FA-Attributes, 
                 delete_Directory_FA-Attributes]
          readOnly: true
          example: modify_Directory_Entry
        noDataChanged:
          description: Zeigt an, ob die Schreiboperation den Datensatz mit ungeänderten Daten überschieben hat (also keine Daten geändert hat)
            noDataChanged=true -> durch diese Operation wurden keine Daten geändert.
          type: boolean
          readOnly: true
          example: false
      
    Error:
      type: object
      properties:
        message: 
          type: string
          description: (optionale) Fehlernachricht
        errors:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/InnerError'

    InnerError:
      type: object
      properties:
        attributeName:
          description: Name des Attributs, in dem ein Fehler erkannt wurde
          type: string
        attributeError:
          description: Beschreibung des erkannten Fehlers
          type: string

    InfoObject:
      required:
      - title
      - version
      readOnly: true
      type: object
      properties:
        title:
          type: string
          description: Der Titel der Anwendung
          example: "I_Directory_Application_Maintenance"
        description:
          type: string
          description: Eine kurze Beschreibung der Anwendung
          example: "REST Schnittstelle zur Pflege der Fachanwendungsdaten der Verzeichniseinträge.
              Über diese Schnittstelle können Fachanwendungsdaten der Verzeichniseinträge erzeugt, aktualisiert und gelöscht werden."
        termsOfService:
          type: string
          format: uri
          description: Eine URL zu den Terms of Service für dieses API.
          example: "http://example.com/terms/"
        contact:
          $ref: '#/components/schemas/Contact'
        license:
          $ref: '#/components/schemas/License'
        version:
          type: string
          description: Die Version von dem OpenAPI Document (YAML Datei)
          example: "1.1.0"

    Contact:
      readOnly: true
      description: Die Kontaktinformationen für diese Schnittstelle.
      type: object
      properties:
        name:
          type: string
          description: Der Name von der Kontaktperson / -Organisation
          example: "Firma 123"
        url:
          type: string
          format: uri
          description: | 
            Eine URL zu den Kontaktinformationen für dieses API.
            In dem Dokument unter dieser URL muss ein Link zum Download der aktuell genutzten YAML Datei dieser Schnittstelle hinterlegt sein.
          example: "http://www.example.com/support"
        email:
          type: string
          format: email
          description: Der E-Mail Adresse der Kontaktperson / -Organisation.
          example: "support@example.com"

    License:
      required:
      - name
      readOnly: true
      description: Der Lizenzinformationen für diese Schnittstelle.
      type: object
      properties:
        name:
          type: string
          description: Der Lizenzname
          example: "Apache 2.0"
        url:
          type: string
          description: Eine URL zu den Lizenzinformationen für dieses API.
          example: "https://www.apache.org/licenses/LICENSE-2.0.html"

#  securitySchemes:
#    TLS:
#      type: mutualTLS
#   Da "mutualTLS" erst ab OpenAPI 3.1 möglich ist - welches viele Tools noch nicht unterstützen -
#   wird die beidseitige TLS Authentisierung nicht hier definiert.
